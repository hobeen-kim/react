 2023-06-30T17:56:47.233+09:00  INFO 3520 --- [main] s.b.domain.CommonDocControllerTest       : Starting CommonDocControllerTest using Java 17.0.6 with PID 3520 (started by kimhobeen in C:\Users\kimhobeen\IdeaProjects\toy_project\soccerAnalyst\socceranalyst\backend)
 2023-06-30T17:56:47.245+09:00  INFO 3520 --- [main] s.b.domain.CommonDocControllerTest       : No active profile set, falling back to 1 default profile: "default"
 2023-06-30T17:56:48.863+09:00  INFO 3520 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
 2023-06-30T17:56:48.865+09:00  INFO 3520 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
 2023-06-30T17:56:49.168+09:00  INFO 3520 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 291 ms. Found 8 JPA repository interfaces.
 2023-06-30T17:56:49.191+09:00  INFO 3520 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
 2023-06-30T17:56:49.194+09:00  INFO 3520 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
 2023-06-30T17:56:49.220+09:00  INFO 3520 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.auth.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T17:56:49.221+09:00  INFO 3520 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.dotrecord.repository.DotRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T17:56:49.222+09:00  INFO 3520 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.game.repository.GamePlayerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T17:56:49.222+09:00  INFO 3520 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.game.repository.GameRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T17:56:49.223+09:00  INFO 3520 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.player.repository.PlayerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T17:56:49.224+09:00  INFO 3520 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.post.repository.CommentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T17:56:49.225+09:00  INFO 3520 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.post.repository.PostRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T17:56:49.225+09:00  INFO 3520 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.record.repository.RecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T17:56:49.225+09:00  INFO 3520 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
 2023-06-30T17:56:50.542+09:00  INFO 3520 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
 2023-06-30T17:56:50.748+09:00  INFO 3520 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.1.7.Final
 2023-06-30T17:56:51.579+09:00  INFO 3520 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
 2023-06-30T17:56:51.913+09:00  INFO 3520 --- [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
 2023-06-30T17:56:51.916+09:00  INFO 3520 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
 2023-06-30T17:56:51.966+09:00  INFO 3520 --- [main] SQL dialect                              : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
 2023-06-30T17:56:53.329+09:00 DEBUG 3520 --- [main] org.hibernate.SQL                        : drop table if exists comment cascade 
 2023-06-30T17:56:53.331+09:00 DEBUG 3520 --- [main] org.hibernate.SQL                        : drop table if exists dot_record cascade 
 2023-06-30T17:56:53.331+09:00 DEBUG 3520 --- [main] org.hibernate.SQL                        : drop table if exists game cascade 
 2023-06-30T17:56:53.331+09:00 DEBUG 3520 --- [main] org.hibernate.SQL                        : drop table if exists game_player cascade 
 2023-06-30T17:56:53.332+09:00 DEBUG 3520 --- [main] org.hibernate.SQL                        : drop table if exists member cascade 
 2023-06-30T17:56:53.332+09:00 DEBUG 3520 --- [main] org.hibernate.SQL                        : drop table if exists player cascade 
 2023-06-30T17:56:53.332+09:00 DEBUG 3520 --- [main] org.hibernate.SQL                        : drop table if exists post cascade 
 2023-06-30T17:56:53.333+09:00 DEBUG 3520 --- [main] org.hibernate.SQL                        : drop table if exists record cascade 
 2023-06-30T17:56:53.333+09:00 DEBUG 3520 --- [main] org.hibernate.SQL                        : drop sequence if exists comment_seq
 2023-06-30T17:56:53.333+09:00 DEBUG 3520 --- [main] org.hibernate.SQL                        : drop sequence if exists post_seq
 2023-06-30T17:56:53.340+09:00 DEBUG 3520 --- [main] org.hibernate.SQL                        : create sequence comment_seq start with 1 increment by 50
 2023-06-30T17:56:53.343+09:00 DEBUG 3520 --- [main] org.hibernate.SQL                        : create sequence post_seq start with 1 increment by 50
 2023-06-30T17:56:53.344+09:00 DEBUG 3520 --- [main] org.hibernate.SQL                        : create table comment (id bigint not null, created_date timestamp(6), modified_date timestamp(6), content varchar(255), member_id bigint, post_id bigint, primary key (id))
 2023-06-30T17:56:53.353+09:00 DEBUG 3520 --- [main] org.hibernate.SQL                        : create table dot_record (id bigint generated by default as identity, game_position smallint, game_time integer, player_id bigint, player_name varchar(255), shoot boolean not null, shootx float(24), shooty float(24), valid_shoot boolean not null, x float(24), y float(24), game_id bigint, primary key (id))
 2023-06-30T17:56:53.359+09:00 DEBUG 3520 --- [main] org.hibernate.SQL                        : create table game (id bigint generated by default as identity, ga integer, gf integer, created_at date, game_name varchar(255), location varchar(255), opponent varchar(255), member_id bigint, primary key (id))
 2023-06-30T17:56:53.361+09:00 DEBUG 3520 --- [main] org.hibernate.SQL                        : create table game_player (id bigint generated by default as identity, game_id bigint, player_id bigint, primary key (id))
 2023-06-30T17:56:53.362+09:00 DEBUG 3520 --- [main] org.hibernate.SQL                        : create table member (id bigint generated by default as identity, authority varchar(255), created_at timestamp(6), email varchar(255) not null, member_id varchar(255) not null, name varchar(255) not null, nickname varchar(255) not null, password varchar(255) not null, primary key (id))
 2023-06-30T17:56:53.363+09:00 DEBUG 3520 --- [main] org.hibernate.SQL                        : create table player (id bigint generated by default as identity, name varchar(255), position varchar(255), member_id bigint, primary key (id))
 2023-06-30T17:56:53.365+09:00 DEBUG 3520 --- [main] org.hibernate.SQL                        : create table post (post_id bigint not null, created_date timestamp(6), modified_date timestamp(6), content varchar(255), title varchar(255), member_id bigint, primary key (post_id))
 2023-06-30T17:56:53.366+09:00 DEBUG 3520 --- [main] org.hibernate.SQL                        : create table record (id bigint generated by default as identity, assist integer, chance_making integer, contention integer, cross_pass integer, dribble integer, game_position varchar(255), goal integer, intercept integer, long_pass integer, main varchar(255), pass integer, shoot integer, success_contention integer, success_cross_pass integer, success_dribble integer, success_long_pass integer, success_pass integer, tackle integer, time_in integer, time_out integer, touch integer, turnover integer, valid_shoot integer, game_id bigint, player_id bigint, primary key (id))
 2023-06-30T17:56:53.368+09:00 DEBUG 3520 --- [main] org.hibernate.SQL                        : alter table if exists comment add constraint FKmrrrpi513ssu63i2783jyiv9m foreign key (member_id) references member
 2023-06-30T17:56:53.375+09:00 DEBUG 3520 --- [main] org.hibernate.SQL                        : alter table if exists comment add constraint FKs1slvnkuemjsq2kj4h3vhx7i1 foreign key (post_id) references post
 2023-06-30T17:56:53.376+09:00 DEBUG 3520 --- [main] org.hibernate.SQL                        : alter table if exists dot_record add constraint FK7vn3bjp9sr541b5t6554xw0va foreign key (game_id) references game
 2023-06-30T17:56:53.378+09:00 DEBUG 3520 --- [main] org.hibernate.SQL                        : alter table if exists game add constraint FKlhk3xa6l9tc50g6mxkykgg5sx foreign key (member_id) references member
 2023-06-30T17:56:53.379+09:00 DEBUG 3520 --- [main] org.hibernate.SQL                        : alter table if exists game_player add constraint FK8so14tnd5mqdjqabugc0cycxu foreign key (game_id) references game
 2023-06-30T17:56:53.380+09:00 DEBUG 3520 --- [main] org.hibernate.SQL                        : alter table if exists game_player add constraint FK7ntwi66eylpagi55pmm4i61l5 foreign key (player_id) references player
 2023-06-30T17:56:53.381+09:00 DEBUG 3520 --- [main] org.hibernate.SQL                        : alter table if exists player add constraint FKtky0mr5eq3kww4rqiscxivebo foreign key (member_id) references member
 2023-06-30T17:56:53.384+09:00 DEBUG 3520 --- [main] org.hibernate.SQL                        : alter table if exists post add constraint FK83s99f4kx8oiqm3ro0sasmpww foreign key (member_id) references member
 2023-06-30T17:56:53.386+09:00 DEBUG 3520 --- [main] org.hibernate.SQL                        : alter table if exists record add constraint FK5ic2ohoewcxeuaysnre2s7l4t foreign key (game_id) references game
 2023-06-30T17:56:53.388+09:00 DEBUG 3520 --- [main] org.hibernate.SQL                        : alter table if exists record add constraint FKfw266w08u31ocmlunkj50celm foreign key (player_id) references player
 2023-06-30T17:56:53.392+09:00  INFO 3520 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
 2023-06-30T17:56:53.406+09:00  INFO 3520 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
 2023-06-30T17:56:54.596+09:00  WARN 3520 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.auth.repository.MemberRepository
 2023-06-30T17:56:55.919+09:00  WARN 3520 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.player.repository.PlayerRepository
 2023-06-30T17:56:56.011+09:00  WARN 3520 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.game.repository.GameRepository
 2023-06-30T17:56:56.067+09:00  WARN 3520 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.record.repository.RecordRepository
 2023-06-30T17:56:56.159+09:00  WARN 3520 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.game.repository.GamePlayerRepository
 2023-06-30T17:56:56.216+09:00  WARN 3520 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.dotrecord.repository.DotRecordRepository
 2023-06-30T17:56:56.372+09:00  WARN 3520 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.post.repository.PostRepository
 2023-06-30T17:56:57.427+09:00  WARN 3520 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.post.repository.CommentRepository
 2023-06-30T17:56:57.617+09:00  WARN 3520 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
 2023-06-30T17:56:58.733+09:00  INFO 3520 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page: class path resource [static/index.html]
 2023-06-30T17:56:59.713+09:00  INFO 3520 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/dev/actuator'
 2023-06-30T17:56:59.951+09:00  INFO 3520 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2db27b46, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5bee07c3, org.springframework.security.web.context.SecurityContextHolderFilter@6f77917c, org.springframework.security.web.header.HeaderWriterFilter@1428d63, org.springframework.web.filter.CorsFilter@1e7b277a, org.springframework.security.web.authentication.logout.LogoutFilter@649a76c1, soccer.backend.auth.jwt.JwtFilter@5d81b90a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@55145dc5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5435582e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@635791b7, org.springframework.security.web.session.SessionManagementFilter@1a177f2c, org.springframework.security.web.access.ExceptionTranslationFilter@221c097f, org.springframework.security.web.access.intercept.AuthorizationFilter@7cb15360]
 2023-06-30T17:57:01.425+09:00  INFO 3520 --- [main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
 2023-06-30T17:57:01.426+09:00  INFO 3520 --- [main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
 2023-06-30T17:57:01.431+09:00  INFO 3520 --- [main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 5 ms
 2023-06-30T17:57:01.599+09:00  INFO 3520 --- [main] s.b.domain.CommonDocControllerTest       : Started CommonDocControllerTest in 15.011 seconds (process running for 16.87)
 2023-06-30T17:57:02.150+09:00  INFO 3520 --- [main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
 2023-06-30T17:57:02.151+09:00  INFO 3520 --- [main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
 2023-06-30T17:57:02.152+09:00  INFO 3520 --- [main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
 2023-06-30T17:57:02.412+09:00  INFO 3520 --- [main] s.backend.global.logging.LogAspect       : handleMethodArgumentNotValidException 실행
 2023-06-30T17:57:02.413+09:00  INFO 3520 --- [main] s.backend.global.logging.LogAspect       : Unknown Error detail: 

org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public void soccer.backend.restdocs.utils.CommonDocController.errorSample(soccer.backend.restdocs.utils.CommonDocController$SampleRequest) throws java.lang.Exception: [Field error in object 'sampleRequest' on field 'email': rejected value [hhh.naver]; codes [Email.sampleRequest.email,Email.email,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [sampleRequest.email,email]; arguments []; default message [email],[Ljakarta.validation.constraints.Pattern$Flag;@2674c88f,.*]; default message [must be a well-formed email address]]
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:144)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:181)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:148)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:563)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:631)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)
	at soccer.backend.restdocs.controller.CommonDocControllerTest.errorSample(CommonDocControllerTest.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:217)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)

 2023-06-30T17:57:02.425+09:00  INFO 3520 --- [main] s.backend.global.logging.LogAspect       : Unknown called the method: handleMethodArgumentNotValidException
 2023-06-30T17:57:02.432+09:00  INFO 3520 --- [main] s.backend.global.logging.LogAspect       : Unknown method has finished: handleMethodArgumentNotValidException
 2023-06-30T17:57:02.715+09:00  INFO 3520 --- [main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
 2023-06-30T17:57:02.716+09:00  INFO 3520 --- [main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
 2023-06-30T17:57:02.717+09:00  INFO 3520 --- [main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
 2023-06-30T17:57:02.719+09:00  INFO 3520 --- [main] s.backend.global.logging.LogAspect       : Unknown called the method: findEnums
 2023-06-30T17:57:02.722+09:00  INFO 3520 --- [main] s.backend.global.logging.LogAspect       : Unknown method has finished: findEnums
 2023-06-30T17:57:02.973+09:00  INFO 3520 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
 2023-06-30T17:57:02.975+09:00  INFO 3520 --- [SpringApplicationShutdownHook] .SchemaDropperImpl$DelayedDropActionImpl : HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
 2023-06-30T17:57:02.976+09:00 DEBUG 3520 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists comment cascade 
 2023-06-30T17:57:02.978+09:00 DEBUG 3520 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists dot_record cascade 
 2023-06-30T17:57:02.980+09:00 DEBUG 3520 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists game cascade 
 2023-06-30T17:57:02.984+09:00 DEBUG 3520 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists game_player cascade 
 2023-06-30T17:57:02.985+09:00 DEBUG 3520 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists member cascade 
 2023-06-30T17:57:02.988+09:00 DEBUG 3520 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists player cascade 
 2023-06-30T17:57:02.989+09:00 DEBUG 3520 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists post cascade 
 2023-06-30T17:57:02.990+09:00 DEBUG 3520 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists record cascade 
 2023-06-30T17:57:02.990+09:00 DEBUG 3520 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop sequence if exists comment_seq
 2023-06-30T17:57:02.991+09:00 DEBUG 3520 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop sequence if exists post_seq
 2023-06-30T17:57:02.993+09:00  INFO 3520 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
 2023-06-30T17:57:02.995+09:00  INFO 3520 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
 2023-06-30T18:31:21.682+09:00  INFO 19428 --- [main] s.b.d.p.controller.PostControllerTest    : Starting PostControllerTest using Java 17.0.6 with PID 19428 (started by kimhobeen in C:\Users\kimhobeen\IdeaProjects\toy_project\soccerAnalyst\socceranalyst\backend)
 2023-06-30T18:31:21.684+09:00  INFO 19428 --- [main] s.b.d.p.controller.PostControllerTest    : No active profile set, falling back to 1 default profile: "default"
 2023-06-30T18:31:23.005+09:00  INFO 19428 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
 2023-06-30T18:31:23.009+09:00  INFO 19428 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
 2023-06-30T18:31:23.233+09:00  INFO 19428 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 211 ms. Found 8 JPA repository interfaces.
 2023-06-30T18:31:23.251+09:00  INFO 19428 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
 2023-06-30T18:31:23.253+09:00  INFO 19428 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
 2023-06-30T18:31:23.275+09:00  INFO 19428 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.auth.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:31:23.276+09:00  INFO 19428 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.dotrecord.repository.DotRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:31:23.277+09:00  INFO 19428 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.game.repository.GamePlayerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:31:23.278+09:00  INFO 19428 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.game.repository.GameRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:31:23.278+09:00  INFO 19428 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.player.repository.PlayerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:31:23.280+09:00  INFO 19428 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.post.repository.CommentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:31:23.280+09:00  INFO 19428 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.post.repository.PostRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:31:23.280+09:00  INFO 19428 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.record.repository.RecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:31:23.281+09:00  INFO 19428 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
 2023-06-30T18:31:24.313+09:00  INFO 19428 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
 2023-06-30T18:31:24.437+09:00  INFO 19428 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.1.7.Final
 2023-06-30T18:31:24.871+09:00  INFO 19428 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
 2023-06-30T18:31:25.037+09:00  INFO 19428 --- [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
 2023-06-30T18:31:25.039+09:00  INFO 19428 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
 2023-06-30T18:31:25.069+09:00  INFO 19428 --- [main] SQL dialect                              : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
 2023-06-30T18:31:26.164+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : drop table if exists comment cascade 
 2023-06-30T18:31:26.166+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : drop table if exists dot_record cascade 
 2023-06-30T18:31:26.167+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : drop table if exists game cascade 
 2023-06-30T18:31:26.167+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : drop table if exists game_player cascade 
 2023-06-30T18:31:26.167+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : drop table if exists member cascade 
 2023-06-30T18:31:26.167+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : drop table if exists player cascade 
 2023-06-30T18:31:26.167+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : drop table if exists post cascade 
 2023-06-30T18:31:26.167+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : drop table if exists record cascade 
 2023-06-30T18:31:26.169+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : drop sequence if exists comment_seq
 2023-06-30T18:31:26.169+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : drop sequence if exists post_seq
 2023-06-30T18:31:26.175+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : create sequence comment_seq start with 1 increment by 50
 2023-06-30T18:31:26.178+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : create sequence post_seq start with 1 increment by 50
 2023-06-30T18:31:26.179+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : create table comment (id bigint not null, created_date timestamp(6), modified_date timestamp(6), content varchar(255), member_id bigint, post_id bigint, primary key (id))
 2023-06-30T18:31:26.186+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : create table dot_record (id bigint generated by default as identity, game_position smallint, game_time integer, player_id bigint, player_name varchar(255), shoot boolean not null, shootx float(24), shooty float(24), valid_shoot boolean not null, x float(24), y float(24), game_id bigint, primary key (id))
 2023-06-30T18:31:26.191+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : create table game (id bigint generated by default as identity, ga integer, gf integer, created_at date, game_name varchar(255), location varchar(255), opponent varchar(255), member_id bigint, primary key (id))
 2023-06-30T18:31:26.193+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : create table game_player (id bigint generated by default as identity, game_id bigint, player_id bigint, primary key (id))
 2023-06-30T18:31:26.194+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : create table member (id bigint generated by default as identity, authority varchar(255), created_at timestamp(6), email varchar(255) not null, member_id varchar(255) not null, name varchar(255) not null, nickname varchar(255) not null, password varchar(255) not null, primary key (id))
 2023-06-30T18:31:26.196+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : create table player (id bigint generated by default as identity, name varchar(255), position varchar(255), member_id bigint, primary key (id))
 2023-06-30T18:31:26.197+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : create table post (post_id bigint not null, created_date timestamp(6), modified_date timestamp(6), content varchar(255), title varchar(255), member_id bigint, primary key (post_id))
 2023-06-30T18:31:26.199+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : create table record (id bigint generated by default as identity, assist integer, chance_making integer, contention integer, cross_pass integer, dribble integer, game_position varchar(255), goal integer, intercept integer, long_pass integer, main varchar(255), pass integer, shoot integer, success_contention integer, success_cross_pass integer, success_dribble integer, success_long_pass integer, success_pass integer, tackle integer, time_in integer, time_out integer, touch integer, turnover integer, valid_shoot integer, game_id bigint, player_id bigint, primary key (id))
 2023-06-30T18:31:26.201+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : alter table if exists comment add constraint FKmrrrpi513ssu63i2783jyiv9m foreign key (member_id) references member
 2023-06-30T18:31:26.206+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : alter table if exists comment add constraint FKs1slvnkuemjsq2kj4h3vhx7i1 foreign key (post_id) references post
 2023-06-30T18:31:26.208+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : alter table if exists dot_record add constraint FK7vn3bjp9sr541b5t6554xw0va foreign key (game_id) references game
 2023-06-30T18:31:26.209+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : alter table if exists game add constraint FKlhk3xa6l9tc50g6mxkykgg5sx foreign key (member_id) references member
 2023-06-30T18:31:26.210+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : alter table if exists game_player add constraint FK8so14tnd5mqdjqabugc0cycxu foreign key (game_id) references game
 2023-06-30T18:31:26.211+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : alter table if exists game_player add constraint FK7ntwi66eylpagi55pmm4i61l5 foreign key (player_id) references player
 2023-06-30T18:31:26.212+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : alter table if exists player add constraint FKtky0mr5eq3kww4rqiscxivebo foreign key (member_id) references member
 2023-06-30T18:31:26.215+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : alter table if exists post add constraint FK83s99f4kx8oiqm3ro0sasmpww foreign key (member_id) references member
 2023-06-30T18:31:26.217+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : alter table if exists record add constraint FK5ic2ohoewcxeuaysnre2s7l4t foreign key (game_id) references game
 2023-06-30T18:31:26.218+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : alter table if exists record add constraint FKfw266w08u31ocmlunkj50celm foreign key (player_id) references player
 2023-06-30T18:31:26.223+09:00  INFO 19428 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
 2023-06-30T18:31:26.233+09:00  INFO 19428 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
 2023-06-30T18:31:27.330+09:00  WARN 19428 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.auth.repository.MemberRepository
 2023-06-30T18:31:28.382+09:00  WARN 19428 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.player.repository.PlayerRepository
 2023-06-30T18:31:28.458+09:00  WARN 19428 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.game.repository.GameRepository
 2023-06-30T18:31:28.502+09:00  WARN 19428 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.record.repository.RecordRepository
 2023-06-30T18:31:28.556+09:00  WARN 19428 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.game.repository.GamePlayerRepository
 2023-06-30T18:31:28.599+09:00  WARN 19428 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.dotrecord.repository.DotRecordRepository
 2023-06-30T18:31:28.711+09:00  WARN 19428 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.post.repository.PostRepository
 2023-06-30T18:31:29.388+09:00  WARN 19428 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.post.repository.CommentRepository
 2023-06-30T18:31:29.528+09:00  WARN 19428 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
 2023-06-30T18:31:30.397+09:00  INFO 19428 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page: class path resource [static/index.html]
 2023-06-30T18:31:31.103+09:00  INFO 19428 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/dev/actuator'
 2023-06-30T18:31:31.236+09:00  INFO 19428 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@743a9292, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6dbfd081, org.springframework.security.web.context.SecurityContextHolderFilter@222557fc, org.springframework.security.web.header.HeaderWriterFilter@63f9c2cd, org.springframework.web.filter.CorsFilter@4691e2f5, org.springframework.security.web.authentication.logout.LogoutFilter@f57ced1, soccer.backend.auth.jwt.JwtFilter@47cf41d7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@c5dc3db, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3699c795, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@67c1f5be, org.springframework.security.web.session.SessionManagementFilter@1cfa5e46, org.springframework.security.web.access.ExceptionTranslationFilter@3f35d13d, org.springframework.security.web.access.intercept.AuthorizationFilter@6e1ef044]
 2023-06-30T18:31:32.028+09:00  INFO 19428 --- [main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
 2023-06-30T18:31:32.029+09:00  INFO 19428 --- [main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
 2023-06-30T18:31:32.031+09:00  INFO 19428 --- [main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
 2023-06-30T18:31:32.188+09:00  INFO 19428 --- [main] s.b.d.p.controller.PostControllerTest    : Started PostControllerTest in 11.024 seconds (process running for 12.231)
 2023-06-30T18:31:32.528+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into member (id, authority, created_at, email, member_id, name, nickname, password) values (default, ?, ?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.576+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : select next value for post_seq
 2023-06-30T18:31:32.588+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : select next value for comment_seq
 2023-06-30T18:31:32.589+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : select next value for comment_seq
 2023-06-30T18:31:32.592+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : select next value for post_seq
 2023-06-30T18:31:32.606+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : select next value for comment_seq
 2023-06-30T18:31:32.619+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : select next value for comment_seq
 2023-06-30T18:31:32.631+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : select next value for comment_seq
 2023-06-30T18:31:32.643+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : select next value for comment_seq
 2023-06-30T18:31:32.652+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : select next value for comment_seq
 2023-06-30T18:31:32.656+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : select next value for comment_seq
 2023-06-30T18:31:32.663+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : select next value for comment_seq
 2023-06-30T18:31:32.668+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : select next value for comment_seq
 2023-06-30T18:31:32.673+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : select next value for comment_seq
 2023-06-30T18:31:32.692+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.694+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.695+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.696+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.697+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.698+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.698+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.699+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.699+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.700+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.702+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.702+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.703+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.704+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.704+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.705+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.706+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.707+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.708+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.709+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.710+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.710+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.712+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.713+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.714+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.714+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.714+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.715+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.715+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.716+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.717+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.717+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.718+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.719+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.719+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.720+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.720+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.721+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.722+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.722+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.723+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.724+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.725+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.726+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.727+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.728+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.728+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.729+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.729+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.730+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.731+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.732+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.733+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.734+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.735+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.735+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.736+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.736+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.737+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.738+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.739+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.739+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.741+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.742+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.743+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.743+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.744+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.744+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.745+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.746+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.746+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.747+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.748+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.749+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.749+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.750+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.750+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.750+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.751+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.752+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.752+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.753+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.753+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.754+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.754+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.754+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.755+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.755+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.757+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.757+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.758+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.758+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.758+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.758+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.759+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.759+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.759+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.760+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.761+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.761+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.762+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.763+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.763+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.764+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.764+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.765+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.766+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.766+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.767+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.768+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.768+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.769+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.769+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.770+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.771+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.771+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.772+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.773+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.773+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.774+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.774+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.774+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.775+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.775+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.776+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.776+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.777+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.778+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.780+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.781+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.781+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.781+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.782+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.782+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.783+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.783+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.784+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.784+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.784+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.785+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.785+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.785+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.785+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.785+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.786+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.786+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.786+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.786+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.786+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.787+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.787+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.787+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.787+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.788+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.788+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.788+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.788+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.788+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.789+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.789+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.789+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.789+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.790+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.790+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.790+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.791+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.791+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.791+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.792+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.792+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.792+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.792+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.793+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.793+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.793+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.793+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.794+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.794+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.795+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.796+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.797+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.798+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.798+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.799+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.799+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.799+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.800+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.800+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.800+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.801+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.801+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.802+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.802+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.803+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.803+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.803+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.803+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.804+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.804+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.804+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.805+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.805+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.805+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.806+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.806+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.806+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.807+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.807+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.807+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.808+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.808+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.808+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.808+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.809+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.809+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.809+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.810+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.810+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.810+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.810+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.810+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.810+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.810+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.810+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.812+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.812+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.812+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.812+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.813+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.813+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.813+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.813+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.814+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.814+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.814+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.814+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.815+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.815+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.815+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.816+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.817+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.818+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.818+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.818+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.819+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.819+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.820+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.820+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.820+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.820+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.821+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.821+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.821+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.822+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.823+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.824+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.824+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.825+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.825+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.825+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.825+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.825+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.825+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.825+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.826+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.826+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.826+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.826+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.826+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.827+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.827+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.827+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.827+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.827+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.827+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.827+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.827+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.828+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.828+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.828+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.828+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.828+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.828+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.828+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.828+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.828+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.829+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.829+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.829+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.829+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.829+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.829+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.829+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.830+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.830+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.830+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.830+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.830+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.830+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.830+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.830+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.830+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.831+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.831+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.831+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.831+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.832+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.832+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.832+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.832+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.833+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.833+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.833+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.833+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.833+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.834+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.834+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.834+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.834+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.834+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.835+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.835+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.835+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.836+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.836+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.836+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.836+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.836+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.836+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.836+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.836+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.837+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.838+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.838+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.838+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.838+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.839+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.839+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.839+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.839+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.839+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.839+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.839+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.840+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.840+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.840+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.840+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.840+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.840+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.841+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.841+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.841+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.841+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.841+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.841+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.841+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.841+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.841+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.842+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.842+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.842+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.842+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.842+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.842+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.842+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.843+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.843+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.843+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.843+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.843+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.843+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.844+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.844+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.844+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.844+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.844+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.844+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.845+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.845+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.845+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.845+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.845+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.845+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.846+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.846+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.846+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.846+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.847+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.847+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.847+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.847+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.847+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.847+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.847+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.847+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.848+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.848+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.848+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.848+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.848+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.848+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.848+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.848+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.849+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.849+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.849+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.849+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.849+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.849+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.849+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.849+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.850+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.850+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.850+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.850+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.850+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.850+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.850+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.850+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.850+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.850+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.851+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.851+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.851+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.851+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.851+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.851+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.851+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.851+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.851+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.852+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.852+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.852+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.852+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.852+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.852+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.852+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.852+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.852+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.852+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.852+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.852+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.853+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.853+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.853+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.853+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.853+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.853+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.853+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.853+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.853+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.853+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.853+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.853+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.853+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.853+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.853+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.854+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.854+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.854+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.854+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.854+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.854+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.854+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.854+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.854+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.854+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.854+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.854+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.854+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.855+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.855+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.855+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.855+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.855+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.855+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.855+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.855+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.855+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.855+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.856+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.856+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.856+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.856+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.856+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.856+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.856+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.856+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.856+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.856+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.856+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.856+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.856+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.856+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.857+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.857+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.865+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.866+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.866+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.866+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.866+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.866+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.867+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.867+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.868+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.868+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.868+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.868+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.868+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.869+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.869+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.870+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.872+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.872+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.873+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.873+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.873+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.873+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.873+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.873+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.874+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.874+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.874+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.874+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.875+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.875+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.875+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.875+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.875+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.876+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.876+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.876+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.876+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.876+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.876+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.876+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.876+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.876+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.876+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.876+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into post (content, created_date, member_id, modified_date, title, post_id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.876+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.876+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.876+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.877+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.877+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.877+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.877+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.877+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.877+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.877+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into comment (content, created_date, member_id, modified_date, post_id, id) values (?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.877+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : insert into member (id, authority, created_at, email, member_id, name, nickname, password) values (default, ?, ?, ?, ?, ?, ?, ?)
 2023-06-30T18:31:32.878+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : select next value for comment_seq
 2023-06-30T18:31:32.878+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : select next value for post_seq
 2023-06-30T18:31:32.881+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : select next value for comment_seq
 2023-06-30T18:31:32.885+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : select next value for comment_seq
 2023-06-30T18:31:32.887+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : select next value for comment_seq
 2023-06-30T18:31:32.889+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : select next value for comment_seq
 2023-06-30T18:31:32.890+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : select next value for comment_seq
 2023-06-30T18:31:32.892+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : select next value for comment_seq
 2023-06-30T18:31:32.893+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : select next value for comment_seq
 2023-06-30T18:31:32.894+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : select next value for comment_seq
 2023-06-30T18:31:32.895+09:00 DEBUG 19428 --- [main] org.hibernate.SQL                        : select next value for comment_seq
c0926e92-d27f-4cce-90a3-ec84bcd3ceeb 2023-06-30T18:31:32.976+09:00  WARN 19428 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.post.controller.PostController
c0926e92-d27f-4cce-90a3-ec84bcd3ceeb 2023-06-30T18:31:32.982+09:00  INFO 19428 --- [main] s.backend.global.logging.LogAspect       : user called the method: getPost
c0926e92-d27f-4cce-90a3-ec84bcd3ceeb 2023-06-30T18:31:33.151+09:00 ERROR 19428 --- [main] ERROR_FILE_LOGGER                        : handleException 실행
c0926e92-d27f-4cce-90a3-ec84bcd3ceeb 2023-06-30T18:31:33.152+09:00 ERROR 19428 --- [main] ERROR_FILE_LOGGER                        : user Error detail: 

jakarta.servlet.ServletException: Handler dispatch failed: java.lang.NoSuchFieldError: member
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1096)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:537)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:631)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:399)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:297)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:79)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:125)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at soccer.backend.auth.jwt.JwtFilter.doFilterInternal(JwtFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:280)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:170)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at soccer.backend.global.filter.MDCLoggingFilter.doFilter(MDCLoggingFilter.java:20)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)
	at soccer.backend.domain.post.controller.PostControllerTest.getPost(PostControllerTest.java:53)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:217)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: java.lang.NoSuchFieldError: member
	at soccer.backend.domain.post.repository.PostRepositoryImpl.findByIdWithMember(PostRepositoryImpl.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:288)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:136)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:120)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:77)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:163)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:218)
	at jdk.proxy2/jdk.proxy2.$Proxy180.findByIdWithMember(Unknown Source)
	at soccer.backend.domain.post.service.PostService.findPostWithMember(PostService.java:123)
	at soccer.backend.domain.post.service.PostService.getPost(PostService.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:702)
	at soccer.backend.domain.post.service.PostService$$SpringCGLIB$$0.getPost(<generated>)
	at soccer.backend.domain.post.controller.PostController.getPost(PostController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:141)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at soccer.backend.global.logging.LogAspect.Controllerlog(LogAspect.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:71)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:702)
	at soccer.backend.domain.post.controller.PostController$$SpringCGLIB$$0.getPost(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	... 168 common frames omitted

c0926e92-d27f-4cce-90a3-ec84bcd3ceeb 2023-06-30T18:31:33.159+09:00  INFO 19428 --- [main] s.backend.global.logging.LogAspect       : user called the method: handleException
c0926e92-d27f-4cce-90a3-ec84bcd3ceeb 2023-06-30T18:31:33.164+09:00  INFO 19428 --- [main] s.backend.global.logging.LogAspect       : user method has finished: handleException
 2023-06-30T18:31:33.430+09:00  INFO 19428 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
 2023-06-30T18:31:33.431+09:00  INFO 19428 --- [SpringApplicationShutdownHook] .SchemaDropperImpl$DelayedDropActionImpl : HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
 2023-06-30T18:31:33.433+09:00 DEBUG 19428 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists comment cascade 
 2023-06-30T18:31:33.436+09:00 DEBUG 19428 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists dot_record cascade 
 2023-06-30T18:31:33.438+09:00 DEBUG 19428 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists game cascade 
 2023-06-30T18:31:33.439+09:00 DEBUG 19428 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists game_player cascade 
 2023-06-30T18:31:33.439+09:00 DEBUG 19428 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists member cascade 
 2023-06-30T18:31:33.440+09:00 DEBUG 19428 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists player cascade 
 2023-06-30T18:31:33.441+09:00 DEBUG 19428 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists post cascade 
 2023-06-30T18:31:33.442+09:00 DEBUG 19428 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists record cascade 
 2023-06-30T18:31:33.444+09:00 DEBUG 19428 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop sequence if exists comment_seq
 2023-06-30T18:31:33.444+09:00 DEBUG 19428 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop sequence if exists post_seq
 2023-06-30T18:31:33.447+09:00  INFO 19428 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
 2023-06-30T18:31:33.450+09:00  INFO 19428 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
 2023-06-30T18:32:59.299+09:00  INFO 5652 --- [main] s.b.d.p.controller.PlayerControllerTest  : Starting PlayerControllerTest using Java 17.0.6 with PID 5652 (started by kimhobeen in C:\Users\kimhobeen\IdeaProjects\toy_project\soccerAnalyst\socceranalyst\backend)
 2023-06-30T18:32:59.301+09:00  INFO 5652 --- [main] s.b.d.p.controller.PlayerControllerTest  : No active profile set, falling back to 1 default profile: "default"
 2023-06-30T18:33:00.612+09:00  INFO 5652 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
 2023-06-30T18:33:00.615+09:00  INFO 5652 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
 2023-06-30T18:33:00.852+09:00  INFO 5652 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 223 ms. Found 8 JPA repository interfaces.
 2023-06-30T18:33:00.867+09:00  INFO 5652 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
 2023-06-30T18:33:00.869+09:00  INFO 5652 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
 2023-06-30T18:33:00.886+09:00  INFO 5652 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.auth.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:33:00.887+09:00  INFO 5652 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.dotrecord.repository.DotRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:33:00.888+09:00  INFO 5652 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.game.repository.GamePlayerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:33:00.889+09:00  INFO 5652 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.game.repository.GameRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:33:00.889+09:00  INFO 5652 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.player.repository.PlayerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:33:00.890+09:00  INFO 5652 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.post.repository.CommentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:33:00.891+09:00  INFO 5652 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.post.repository.PostRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:33:00.891+09:00  INFO 5652 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.record.repository.RecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:33:00.891+09:00  INFO 5652 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
 2023-06-30T18:33:02.412+09:00  INFO 5652 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
 2023-06-30T18:33:02.508+09:00  INFO 5652 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.1.7.Final
 2023-06-30T18:33:02.778+09:00  INFO 5652 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
 2023-06-30T18:33:03.031+09:00  INFO 5652 --- [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
 2023-06-30T18:33:03.033+09:00  INFO 5652 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
 2023-06-30T18:33:03.068+09:00  INFO 5652 --- [main] SQL dialect                              : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
 2023-06-30T18:33:04.149+09:00 DEBUG 5652 --- [main] org.hibernate.SQL                        : drop table if exists comment cascade 
 2023-06-30T18:33:04.151+09:00 DEBUG 5652 --- [main] org.hibernate.SQL                        : drop table if exists dot_record cascade 
 2023-06-30T18:33:04.151+09:00 DEBUG 5652 --- [main] org.hibernate.SQL                        : drop table if exists game cascade 
 2023-06-30T18:33:04.151+09:00 DEBUG 5652 --- [main] org.hibernate.SQL                        : drop table if exists game_player cascade 
 2023-06-30T18:33:04.151+09:00 DEBUG 5652 --- [main] org.hibernate.SQL                        : drop table if exists member cascade 
 2023-06-30T18:33:04.151+09:00 DEBUG 5652 --- [main] org.hibernate.SQL                        : drop table if exists player cascade 
 2023-06-30T18:33:04.152+09:00 DEBUG 5652 --- [main] org.hibernate.SQL                        : drop table if exists post cascade 
 2023-06-30T18:33:04.152+09:00 DEBUG 5652 --- [main] org.hibernate.SQL                        : drop table if exists record cascade 
 2023-06-30T18:33:04.153+09:00 DEBUG 5652 --- [main] org.hibernate.SQL                        : drop sequence if exists comment_seq
 2023-06-30T18:33:04.153+09:00 DEBUG 5652 --- [main] org.hibernate.SQL                        : drop sequence if exists post_seq
 2023-06-30T18:33:04.158+09:00 DEBUG 5652 --- [main] org.hibernate.SQL                        : create sequence comment_seq start with 1 increment by 50
 2023-06-30T18:33:04.160+09:00 DEBUG 5652 --- [main] org.hibernate.SQL                        : create sequence post_seq start with 1 increment by 50
 2023-06-30T18:33:04.162+09:00 DEBUG 5652 --- [main] org.hibernate.SQL                        : create table comment (id bigint not null, created_date timestamp(6), modified_date timestamp(6), content varchar(255), member_id bigint, post_id bigint, primary key (id))
 2023-06-30T18:33:04.167+09:00 DEBUG 5652 --- [main] org.hibernate.SQL                        : create table dot_record (id bigint generated by default as identity, game_position smallint, game_time integer, player_id bigint, player_name varchar(255), shoot boolean not null, shootx float(24), shooty float(24), valid_shoot boolean not null, x float(24), y float(24), game_id bigint, primary key (id))
 2023-06-30T18:33:04.172+09:00 DEBUG 5652 --- [main] org.hibernate.SQL                        : create table game (id bigint generated by default as identity, ga integer, gf integer, created_at date, game_name varchar(255), location varchar(255), opponent varchar(255), member_id bigint, primary key (id))
 2023-06-30T18:33:04.174+09:00 DEBUG 5652 --- [main] org.hibernate.SQL                        : create table game_player (id bigint generated by default as identity, game_id bigint, player_id bigint, primary key (id))
 2023-06-30T18:33:04.175+09:00 DEBUG 5652 --- [main] org.hibernate.SQL                        : create table member (id bigint generated by default as identity, authority varchar(255), created_at timestamp(6), email varchar(255) not null, member_id varchar(255) not null, name varchar(255) not null, nickname varchar(255) not null, password varchar(255) not null, primary key (id))
 2023-06-30T18:33:04.176+09:00 DEBUG 5652 --- [main] org.hibernate.SQL                        : create table player (id bigint generated by default as identity, name varchar(255), position varchar(255), member_id bigint, primary key (id))
 2023-06-30T18:33:04.177+09:00 DEBUG 5652 --- [main] org.hibernate.SQL                        : create table post (post_id bigint not null, created_date timestamp(6), modified_date timestamp(6), content varchar(255), title varchar(255), member_id bigint, primary key (post_id))
 2023-06-30T18:33:04.178+09:00 DEBUG 5652 --- [main] org.hibernate.SQL                        : create table record (id bigint generated by default as identity, assist integer, chance_making integer, contention integer, cross_pass integer, dribble integer, game_position varchar(255), goal integer, intercept integer, long_pass integer, main varchar(255), pass integer, shoot integer, success_contention integer, success_cross_pass integer, success_dribble integer, success_long_pass integer, success_pass integer, tackle integer, time_in integer, time_out integer, touch integer, turnover integer, valid_shoot integer, game_id bigint, player_id bigint, primary key (id))
 2023-06-30T18:33:04.180+09:00 DEBUG 5652 --- [main] org.hibernate.SQL                        : alter table if exists comment add constraint FKmrrrpi513ssu63i2783jyiv9m foreign key (member_id) references member
 2023-06-30T18:33:04.186+09:00 DEBUG 5652 --- [main] org.hibernate.SQL                        : alter table if exists comment add constraint FKs1slvnkuemjsq2kj4h3vhx7i1 foreign key (post_id) references post
 2023-06-30T18:33:04.188+09:00 DEBUG 5652 --- [main] org.hibernate.SQL                        : alter table if exists dot_record add constraint FK7vn3bjp9sr541b5t6554xw0va foreign key (game_id) references game
 2023-06-30T18:33:04.189+09:00 DEBUG 5652 --- [main] org.hibernate.SQL                        : alter table if exists game add constraint FKlhk3xa6l9tc50g6mxkykgg5sx foreign key (member_id) references member
 2023-06-30T18:33:04.190+09:00 DEBUG 5652 --- [main] org.hibernate.SQL                        : alter table if exists game_player add constraint FK8so14tnd5mqdjqabugc0cycxu foreign key (game_id) references game
 2023-06-30T18:33:04.191+09:00 DEBUG 5652 --- [main] org.hibernate.SQL                        : alter table if exists game_player add constraint FK7ntwi66eylpagi55pmm4i61l5 foreign key (player_id) references player
 2023-06-30T18:33:04.193+09:00 DEBUG 5652 --- [main] org.hibernate.SQL                        : alter table if exists player add constraint FKtky0mr5eq3kww4rqiscxivebo foreign key (member_id) references member
 2023-06-30T18:33:04.196+09:00 DEBUG 5652 --- [main] org.hibernate.SQL                        : alter table if exists post add constraint FK83s99f4kx8oiqm3ro0sasmpww foreign key (member_id) references member
 2023-06-30T18:33:04.198+09:00 DEBUG 5652 --- [main] org.hibernate.SQL                        : alter table if exists record add constraint FK5ic2ohoewcxeuaysnre2s7l4t foreign key (game_id) references game
 2023-06-30T18:33:04.199+09:00 DEBUG 5652 --- [main] org.hibernate.SQL                        : alter table if exists record add constraint FKfw266w08u31ocmlunkj50celm foreign key (player_id) references player
 2023-06-30T18:33:04.204+09:00  INFO 5652 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
 2023-06-30T18:33:04.215+09:00  INFO 5652 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
 2023-06-30T18:33:05.232+09:00  WARN 5652 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.auth.repository.MemberRepository
 2023-06-30T18:33:06.074+09:00  WARN 5652 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.player.repository.PlayerRepository
 2023-06-30T18:33:06.131+09:00  WARN 5652 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.game.repository.GameRepository
 2023-06-30T18:33:06.178+09:00  WARN 5652 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.record.repository.RecordRepository
 2023-06-30T18:33:06.231+09:00  WARN 5652 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.game.repository.GamePlayerRepository
 2023-06-30T18:33:06.269+09:00  WARN 5652 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.dotrecord.repository.DotRecordRepository
 2023-06-30T18:33:06.389+09:00  WARN 5652 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.post.repository.PostRepository
 2023-06-30T18:33:07.092+09:00  WARN 5652 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.post.repository.CommentRepository
 2023-06-30T18:33:07.243+09:00  WARN 5652 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
 2023-06-30T18:33:07.810+09:00  INFO 5652 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page: class path resource [static/index.html]
 2023-06-30T18:33:08.570+09:00  INFO 5652 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/dev/actuator'
 2023-06-30T18:33:08.828+09:00  INFO 5652 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@54b1ba04, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4796ae58, org.springframework.security.web.context.SecurityContextHolderFilter@73760b13, org.springframework.security.web.header.HeaderWriterFilter@7e93497d, org.springframework.web.filter.CorsFilter@7d24def, org.springframework.security.web.authentication.logout.LogoutFilter@2ef99072, soccer.backend.auth.jwt.JwtFilter@2627da4c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1a6aecec, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5bf41334, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7f9f3516, org.springframework.security.web.session.SessionManagementFilter@4cda8d3b, org.springframework.security.web.access.ExceptionTranslationFilter@7bbd133c, org.springframework.security.web.access.intercept.AuthorizationFilter@a632ae0]
 2023-06-30T18:33:09.658+09:00  INFO 5652 --- [main] s.b.d.p.controller.PlayerControllerTest  : Started PlayerControllerTest in 10.872 seconds (process running for 12.019)
 2023-06-30T18:33:09.880+09:00  INFO 5652 --- [main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
 2023-06-30T18:33:09.881+09:00  INFO 5652 --- [main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
 2023-06-30T18:33:09.883+09:00  INFO 5652 --- [main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
 2023-06-30T18:33:10.002+09:00  INFO 5652 --- [main] s.backend.global.logging.LogAspect       : Unknown called the method: playerList
 2023-06-30T18:33:10.007+09:00  INFO 5652 --- [main] s.backend.global.logging.LogAspect       : Unknown method has finished: playerList
 2023-06-30T18:33:10.314+09:00  INFO 5652 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
 2023-06-30T18:33:10.316+09:00  INFO 5652 --- [SpringApplicationShutdownHook] .SchemaDropperImpl$DelayedDropActionImpl : HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
 2023-06-30T18:33:10.318+09:00 DEBUG 5652 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists comment cascade 
 2023-06-30T18:33:10.321+09:00 DEBUG 5652 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists dot_record cascade 
 2023-06-30T18:33:10.324+09:00 DEBUG 5652 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists game cascade 
 2023-06-30T18:33:10.326+09:00 DEBUG 5652 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists game_player cascade 
 2023-06-30T18:33:10.328+09:00 DEBUG 5652 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists member cascade 
 2023-06-30T18:33:10.330+09:00 DEBUG 5652 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists player cascade 
 2023-06-30T18:33:10.331+09:00 DEBUG 5652 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists post cascade 
 2023-06-30T18:33:10.331+09:00 DEBUG 5652 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists record cascade 
 2023-06-30T18:33:10.332+09:00 DEBUG 5652 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop sequence if exists comment_seq
 2023-06-30T18:33:10.333+09:00 DEBUG 5652 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop sequence if exists post_seq
 2023-06-30T18:33:10.335+09:00  INFO 5652 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
 2023-06-30T18:33:10.339+09:00  INFO 5652 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
 2023-06-30T18:33:31.436+09:00  INFO 9012 --- [main] s.b.domain.CommonDocControllerTest       : Starting CommonDocControllerTest using Java 17.0.6 with PID 9012 (started by kimhobeen in C:\Users\kimhobeen\IdeaProjects\toy_project\soccerAnalyst\socceranalyst\backend)
 2023-06-30T18:33:31.438+09:00  INFO 9012 --- [main] s.b.domain.CommonDocControllerTest       : No active profile set, falling back to 1 default profile: "default"
 2023-06-30T18:33:32.773+09:00  INFO 9012 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
 2023-06-30T18:33:32.776+09:00  INFO 9012 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
 2023-06-30T18:33:32.987+09:00  INFO 9012 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 197 ms. Found 8 JPA repository interfaces.
 2023-06-30T18:33:33.014+09:00  INFO 9012 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
 2023-06-30T18:33:33.018+09:00  INFO 9012 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
 2023-06-30T18:33:33.039+09:00  INFO 9012 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.auth.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:33:33.039+09:00  INFO 9012 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.dotrecord.repository.DotRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:33:33.041+09:00  INFO 9012 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.game.repository.GamePlayerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:33:33.042+09:00  INFO 9012 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.game.repository.GameRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:33:33.043+09:00  INFO 9012 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.player.repository.PlayerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:33:33.044+09:00  INFO 9012 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.post.repository.CommentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:33:33.045+09:00  INFO 9012 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.post.repository.PostRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:33:33.046+09:00  INFO 9012 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.record.repository.RecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:33:33.046+09:00  INFO 9012 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
 2023-06-30T18:33:34.045+09:00  INFO 9012 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
 2023-06-30T18:33:34.140+09:00  INFO 9012 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.1.7.Final
 2023-06-30T18:33:34.532+09:00  INFO 9012 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
 2023-06-30T18:33:34.698+09:00  INFO 9012 --- [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
 2023-06-30T18:33:34.700+09:00  INFO 9012 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
 2023-06-30T18:33:34.732+09:00  INFO 9012 --- [main] SQL dialect                              : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
 2023-06-30T18:33:35.872+09:00 DEBUG 9012 --- [main] org.hibernate.SQL                        : drop table if exists comment cascade 
 2023-06-30T18:33:35.874+09:00 DEBUG 9012 --- [main] org.hibernate.SQL                        : drop table if exists dot_record cascade 
 2023-06-30T18:33:35.875+09:00 DEBUG 9012 --- [main] org.hibernate.SQL                        : drop table if exists game cascade 
 2023-06-30T18:33:35.875+09:00 DEBUG 9012 --- [main] org.hibernate.SQL                        : drop table if exists game_player cascade 
 2023-06-30T18:33:35.875+09:00 DEBUG 9012 --- [main] org.hibernate.SQL                        : drop table if exists member cascade 
 2023-06-30T18:33:35.875+09:00 DEBUG 9012 --- [main] org.hibernate.SQL                        : drop table if exists player cascade 
 2023-06-30T18:33:35.876+09:00 DEBUG 9012 --- [main] org.hibernate.SQL                        : drop table if exists post cascade 
 2023-06-30T18:33:35.876+09:00 DEBUG 9012 --- [main] org.hibernate.SQL                        : drop table if exists record cascade 
 2023-06-30T18:33:35.876+09:00 DEBUG 9012 --- [main] org.hibernate.SQL                        : drop sequence if exists comment_seq
 2023-06-30T18:33:35.877+09:00 DEBUG 9012 --- [main] org.hibernate.SQL                        : drop sequence if exists post_seq
 2023-06-30T18:33:35.883+09:00 DEBUG 9012 --- [main] org.hibernate.SQL                        : create sequence comment_seq start with 1 increment by 50
 2023-06-30T18:33:35.886+09:00 DEBUG 9012 --- [main] org.hibernate.SQL                        : create sequence post_seq start with 1 increment by 50
 2023-06-30T18:33:35.888+09:00 DEBUG 9012 --- [main] org.hibernate.SQL                        : create table comment (id bigint not null, created_date timestamp(6), modified_date timestamp(6), content varchar(255), member_id bigint, post_id bigint, primary key (id))
 2023-06-30T18:33:35.893+09:00 DEBUG 9012 --- [main] org.hibernate.SQL                        : create table dot_record (id bigint generated by default as identity, game_position smallint, game_time integer, player_id bigint, player_name varchar(255), shoot boolean not null, shootx float(24), shooty float(24), valid_shoot boolean not null, x float(24), y float(24), game_id bigint, primary key (id))
 2023-06-30T18:33:35.899+09:00 DEBUG 9012 --- [main] org.hibernate.SQL                        : create table game (id bigint generated by default as identity, ga integer, gf integer, created_at date, game_name varchar(255), location varchar(255), opponent varchar(255), member_id bigint, primary key (id))
 2023-06-30T18:33:35.901+09:00 DEBUG 9012 --- [main] org.hibernate.SQL                        : create table game_player (id bigint generated by default as identity, game_id bigint, player_id bigint, primary key (id))
 2023-06-30T18:33:35.902+09:00 DEBUG 9012 --- [main] org.hibernate.SQL                        : create table member (id bigint generated by default as identity, authority varchar(255), created_at timestamp(6), email varchar(255) not null, member_id varchar(255) not null, name varchar(255) not null, nickname varchar(255) not null, password varchar(255) not null, primary key (id))
 2023-06-30T18:33:35.904+09:00 DEBUG 9012 --- [main] org.hibernate.SQL                        : create table player (id bigint generated by default as identity, name varchar(255), position varchar(255), member_id bigint, primary key (id))
 2023-06-30T18:33:35.906+09:00 DEBUG 9012 --- [main] org.hibernate.SQL                        : create table post (post_id bigint not null, created_date timestamp(6), modified_date timestamp(6), content varchar(255), title varchar(255), member_id bigint, primary key (post_id))
 2023-06-30T18:33:35.908+09:00 DEBUG 9012 --- [main] org.hibernate.SQL                        : create table record (id bigint generated by default as identity, assist integer, chance_making integer, contention integer, cross_pass integer, dribble integer, game_position varchar(255), goal integer, intercept integer, long_pass integer, main varchar(255), pass integer, shoot integer, success_contention integer, success_cross_pass integer, success_dribble integer, success_long_pass integer, success_pass integer, tackle integer, time_in integer, time_out integer, touch integer, turnover integer, valid_shoot integer, game_id bigint, player_id bigint, primary key (id))
 2023-06-30T18:33:35.910+09:00 DEBUG 9012 --- [main] org.hibernate.SQL                        : alter table if exists comment add constraint FKmrrrpi513ssu63i2783jyiv9m foreign key (member_id) references member
 2023-06-30T18:33:35.916+09:00 DEBUG 9012 --- [main] org.hibernate.SQL                        : alter table if exists comment add constraint FKs1slvnkuemjsq2kj4h3vhx7i1 foreign key (post_id) references post
 2023-06-30T18:33:35.917+09:00 DEBUG 9012 --- [main] org.hibernate.SQL                        : alter table if exists dot_record add constraint FK7vn3bjp9sr541b5t6554xw0va foreign key (game_id) references game
 2023-06-30T18:33:35.918+09:00 DEBUG 9012 --- [main] org.hibernate.SQL                        : alter table if exists game add constraint FKlhk3xa6l9tc50g6mxkykgg5sx foreign key (member_id) references member
 2023-06-30T18:33:35.920+09:00 DEBUG 9012 --- [main] org.hibernate.SQL                        : alter table if exists game_player add constraint FK8so14tnd5mqdjqabugc0cycxu foreign key (game_id) references game
 2023-06-30T18:33:35.921+09:00 DEBUG 9012 --- [main] org.hibernate.SQL                        : alter table if exists game_player add constraint FK7ntwi66eylpagi55pmm4i61l5 foreign key (player_id) references player
 2023-06-30T18:33:35.922+09:00 DEBUG 9012 --- [main] org.hibernate.SQL                        : alter table if exists player add constraint FKtky0mr5eq3kww4rqiscxivebo foreign key (member_id) references member
 2023-06-30T18:33:35.925+09:00 DEBUG 9012 --- [main] org.hibernate.SQL                        : alter table if exists post add constraint FK83s99f4kx8oiqm3ro0sasmpww foreign key (member_id) references member
 2023-06-30T18:33:35.926+09:00 DEBUG 9012 --- [main] org.hibernate.SQL                        : alter table if exists record add constraint FK5ic2ohoewcxeuaysnre2s7l4t foreign key (game_id) references game
 2023-06-30T18:33:35.927+09:00 DEBUG 9012 --- [main] org.hibernate.SQL                        : alter table if exists record add constraint FKfw266w08u31ocmlunkj50celm foreign key (player_id) references player
 2023-06-30T18:33:35.932+09:00  INFO 9012 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
 2023-06-30T18:33:35.942+09:00  INFO 9012 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
 2023-06-30T18:33:37.185+09:00  WARN 9012 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.auth.repository.MemberRepository
 2023-06-30T18:33:38.080+09:00  WARN 9012 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.player.repository.PlayerRepository
 2023-06-30T18:33:38.152+09:00  WARN 9012 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.game.repository.GameRepository
 2023-06-30T18:33:38.224+09:00  WARN 9012 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.record.repository.RecordRepository
 2023-06-30T18:33:38.317+09:00  WARN 9012 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.game.repository.GamePlayerRepository
 2023-06-30T18:33:38.372+09:00  WARN 9012 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.dotrecord.repository.DotRecordRepository
 2023-06-30T18:33:38.567+09:00  WARN 9012 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.post.repository.PostRepository
 2023-06-30T18:33:39.256+09:00  WARN 9012 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.post.repository.CommentRepository
 2023-06-30T18:33:39.385+09:00  WARN 9012 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
 2023-06-30T18:33:40.192+09:00  INFO 9012 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page: class path resource [static/index.html]
 2023-06-30T18:33:40.816+09:00  INFO 9012 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/dev/actuator'
 2023-06-30T18:33:40.934+09:00  INFO 9012 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@f57ced1, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1d9c18b9, org.springframework.security.web.context.SecurityContextHolderFilter@47e6004c, org.springframework.security.web.header.HeaderWriterFilter@794c22cd, org.springframework.web.filter.CorsFilter@447cdbaa, org.springframework.security.web.authentication.logout.LogoutFilter@7cb4fc46, soccer.backend.auth.jwt.JwtFilter@5e774546, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@36b5dbdf, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7b0a864e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6f67291f, org.springframework.security.web.session.SessionManagementFilter@2693b289, org.springframework.security.web.access.ExceptionTranslationFilter@34adce96, org.springframework.security.web.access.intercept.AuthorizationFilter@7d2dfe9c]
 2023-06-30T18:33:41.686+09:00  INFO 9012 --- [main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
 2023-06-30T18:33:41.687+09:00  INFO 9012 --- [main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
 2023-06-30T18:33:41.690+09:00  INFO 9012 --- [main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
 2023-06-30T18:33:41.815+09:00  INFO 9012 --- [main] s.b.domain.CommonDocControllerTest       : Started CommonDocControllerTest in 10.994 seconds (process running for 12.18)
 2023-06-30T18:33:42.115+09:00  INFO 9012 --- [main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
 2023-06-30T18:33:42.115+09:00  INFO 9012 --- [main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
 2023-06-30T18:33:42.116+09:00  INFO 9012 --- [main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
 2023-06-30T18:33:42.302+09:00  INFO 9012 --- [main] s.backend.global.logging.LogAspect       : handleMethodArgumentNotValidException 실행
 2023-06-30T18:33:42.302+09:00  INFO 9012 --- [main] s.backend.global.logging.LogAspect       : Unknown Error detail: 

org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public void soccer.backend.restdocs.utils.CommonDocController.errorSample(soccer.backend.restdocs.utils.CommonDocController$SampleRequest) throws java.lang.Exception: [Field error in object 'sampleRequest' on field 'email': rejected value [hhh.naver]; codes [Email.sampleRequest.email,Email.email,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [sampleRequest.email,email]; arguments []; default message [email],[Ljakarta.validation.constraints.Pattern$Flag;@1933e1dc,.*]; default message [must be a well-formed email address]]
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:144)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:181)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:148)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:563)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:631)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)
	at soccer.backend.restdocs.controller.CommonDocControllerTest.errorSample(CommonDocControllerTest.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:217)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)

 2023-06-30T18:33:42.312+09:00  INFO 9012 --- [main] s.backend.global.logging.LogAspect       : Unknown called the method: handleMethodArgumentNotValidException
 2023-06-30T18:33:42.317+09:00  INFO 9012 --- [main] s.backend.global.logging.LogAspect       : Unknown method has finished: handleMethodArgumentNotValidException
 2023-06-30T18:33:42.627+09:00  INFO 9012 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
 2023-06-30T18:33:42.628+09:00  INFO 9012 --- [SpringApplicationShutdownHook] .SchemaDropperImpl$DelayedDropActionImpl : HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
 2023-06-30T18:33:42.628+09:00 DEBUG 9012 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists comment cascade 
 2023-06-30T18:33:42.631+09:00 DEBUG 9012 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists dot_record cascade 
 2023-06-30T18:33:42.632+09:00 DEBUG 9012 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists game cascade 
 2023-06-30T18:33:42.633+09:00 DEBUG 9012 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists game_player cascade 
 2023-06-30T18:33:42.634+09:00 DEBUG 9012 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists member cascade 
 2023-06-30T18:33:42.635+09:00 DEBUG 9012 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists player cascade 
 2023-06-30T18:33:42.636+09:00 DEBUG 9012 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists post cascade 
 2023-06-30T18:33:42.638+09:00 DEBUG 9012 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists record cascade 
 2023-06-30T18:33:42.638+09:00 DEBUG 9012 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop sequence if exists comment_seq
 2023-06-30T18:33:42.639+09:00 DEBUG 9012 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop sequence if exists post_seq
 2023-06-30T18:33:42.640+09:00  INFO 9012 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
 2023-06-30T18:33:42.641+09:00  INFO 9012 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
 2023-06-30T18:34:16.996+09:00  INFO 7788 --- [main] s.b.domain.CommonDocControllerTest       : Starting CommonDocControllerTest using Java 17.0.6 with PID 7788 (started by kimhobeen in C:\Users\kimhobeen\IdeaProjects\toy_project\soccerAnalyst\socceranalyst\backend)
 2023-06-30T18:34:16.998+09:00  INFO 7788 --- [main] s.b.domain.CommonDocControllerTest       : No active profile set, falling back to 1 default profile: "default"
 2023-06-30T18:34:18.185+09:00  INFO 7788 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
 2023-06-30T18:34:18.187+09:00  INFO 7788 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
 2023-06-30T18:34:18.410+09:00  INFO 7788 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 210 ms. Found 8 JPA repository interfaces.
 2023-06-30T18:34:18.431+09:00  INFO 7788 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
 2023-06-30T18:34:18.435+09:00  INFO 7788 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
 2023-06-30T18:34:18.455+09:00  INFO 7788 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.auth.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:34:18.456+09:00  INFO 7788 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.dotrecord.repository.DotRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:34:18.458+09:00  INFO 7788 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.game.repository.GamePlayerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:34:18.459+09:00  INFO 7788 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.game.repository.GameRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:34:18.459+09:00  INFO 7788 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.player.repository.PlayerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:34:18.460+09:00  INFO 7788 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.post.repository.CommentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:34:18.461+09:00  INFO 7788 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.post.repository.PostRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:34:18.462+09:00  INFO 7788 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.record.repository.RecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:34:18.462+09:00  INFO 7788 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
 2023-06-30T18:34:19.393+09:00  INFO 7788 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
 2023-06-30T18:34:19.461+09:00  INFO 7788 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.1.7.Final
 2023-06-30T18:34:19.886+09:00  INFO 7788 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
 2023-06-30T18:34:20.061+09:00  INFO 7788 --- [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
 2023-06-30T18:34:20.063+09:00  INFO 7788 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
 2023-06-30T18:34:20.094+09:00  INFO 7788 --- [main] SQL dialect                              : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
 2023-06-30T18:34:21.192+09:00 DEBUG 7788 --- [main] org.hibernate.SQL                        : drop table if exists comment cascade 
 2023-06-30T18:34:21.194+09:00 DEBUG 7788 --- [main] org.hibernate.SQL                        : drop table if exists dot_record cascade 
 2023-06-30T18:34:21.194+09:00 DEBUG 7788 --- [main] org.hibernate.SQL                        : drop table if exists game cascade 
 2023-06-30T18:34:21.194+09:00 DEBUG 7788 --- [main] org.hibernate.SQL                        : drop table if exists game_player cascade 
 2023-06-30T18:34:21.194+09:00 DEBUG 7788 --- [main] org.hibernate.SQL                        : drop table if exists member cascade 
 2023-06-30T18:34:21.195+09:00 DEBUG 7788 --- [main] org.hibernate.SQL                        : drop table if exists player cascade 
 2023-06-30T18:34:21.195+09:00 DEBUG 7788 --- [main] org.hibernate.SQL                        : drop table if exists post cascade 
 2023-06-30T18:34:21.195+09:00 DEBUG 7788 --- [main] org.hibernate.SQL                        : drop table if exists record cascade 
 2023-06-30T18:34:21.196+09:00 DEBUG 7788 --- [main] org.hibernate.SQL                        : drop sequence if exists comment_seq
 2023-06-30T18:34:21.196+09:00 DEBUG 7788 --- [main] org.hibernate.SQL                        : drop sequence if exists post_seq
 2023-06-30T18:34:21.202+09:00 DEBUG 7788 --- [main] org.hibernate.SQL                        : create sequence comment_seq start with 1 increment by 50
 2023-06-30T18:34:21.204+09:00 DEBUG 7788 --- [main] org.hibernate.SQL                        : create sequence post_seq start with 1 increment by 50
 2023-06-30T18:34:21.206+09:00 DEBUG 7788 --- [main] org.hibernate.SQL                        : create table comment (id bigint not null, created_date timestamp(6), modified_date timestamp(6), content varchar(255), member_id bigint, post_id bigint, primary key (id))
 2023-06-30T18:34:21.211+09:00 DEBUG 7788 --- [main] org.hibernate.SQL                        : create table dot_record (id bigint generated by default as identity, game_position smallint, game_time integer, player_id bigint, player_name varchar(255), shoot boolean not null, shootx float(24), shooty float(24), valid_shoot boolean not null, x float(24), y float(24), game_id bigint, primary key (id))
 2023-06-30T18:34:21.216+09:00 DEBUG 7788 --- [main] org.hibernate.SQL                        : create table game (id bigint generated by default as identity, ga integer, gf integer, created_at date, game_name varchar(255), location varchar(255), opponent varchar(255), member_id bigint, primary key (id))
 2023-06-30T18:34:21.217+09:00 DEBUG 7788 --- [main] org.hibernate.SQL                        : create table game_player (id bigint generated by default as identity, game_id bigint, player_id bigint, primary key (id))
 2023-06-30T18:34:21.219+09:00 DEBUG 7788 --- [main] org.hibernate.SQL                        : create table member (id bigint generated by default as identity, authority varchar(255), created_at timestamp(6), email varchar(255) not null, member_id varchar(255) not null, name varchar(255) not null, nickname varchar(255) not null, password varchar(255) not null, primary key (id))
 2023-06-30T18:34:21.221+09:00 DEBUG 7788 --- [main] org.hibernate.SQL                        : create table player (id bigint generated by default as identity, name varchar(255), position varchar(255), member_id bigint, primary key (id))
 2023-06-30T18:34:21.222+09:00 DEBUG 7788 --- [main] org.hibernate.SQL                        : create table post (post_id bigint not null, created_date timestamp(6), modified_date timestamp(6), content varchar(255), title varchar(255), member_id bigint, primary key (post_id))
 2023-06-30T18:34:21.224+09:00 DEBUG 7788 --- [main] org.hibernate.SQL                        : create table record (id bigint generated by default as identity, assist integer, chance_making integer, contention integer, cross_pass integer, dribble integer, game_position varchar(255), goal integer, intercept integer, long_pass integer, main varchar(255), pass integer, shoot integer, success_contention integer, success_cross_pass integer, success_dribble integer, success_long_pass integer, success_pass integer, tackle integer, time_in integer, time_out integer, touch integer, turnover integer, valid_shoot integer, game_id bigint, player_id bigint, primary key (id))
 2023-06-30T18:34:21.228+09:00 DEBUG 7788 --- [main] org.hibernate.SQL                        : alter table if exists comment add constraint FKmrrrpi513ssu63i2783jyiv9m foreign key (member_id) references member
 2023-06-30T18:34:21.236+09:00 DEBUG 7788 --- [main] org.hibernate.SQL                        : alter table if exists comment add constraint FKs1slvnkuemjsq2kj4h3vhx7i1 foreign key (post_id) references post
 2023-06-30T18:34:21.238+09:00 DEBUG 7788 --- [main] org.hibernate.SQL                        : alter table if exists dot_record add constraint FK7vn3bjp9sr541b5t6554xw0va foreign key (game_id) references game
 2023-06-30T18:34:21.240+09:00 DEBUG 7788 --- [main] org.hibernate.SQL                        : alter table if exists game add constraint FKlhk3xa6l9tc50g6mxkykgg5sx foreign key (member_id) references member
 2023-06-30T18:34:21.248+09:00 DEBUG 7788 --- [main] org.hibernate.SQL                        : alter table if exists game_player add constraint FK8so14tnd5mqdjqabugc0cycxu foreign key (game_id) references game
 2023-06-30T18:34:21.251+09:00 DEBUG 7788 --- [main] org.hibernate.SQL                        : alter table if exists game_player add constraint FK7ntwi66eylpagi55pmm4i61l5 foreign key (player_id) references player
 2023-06-30T18:34:21.253+09:00 DEBUG 7788 --- [main] org.hibernate.SQL                        : alter table if exists player add constraint FKtky0mr5eq3kww4rqiscxivebo foreign key (member_id) references member
 2023-06-30T18:34:21.257+09:00 DEBUG 7788 --- [main] org.hibernate.SQL                        : alter table if exists post add constraint FK83s99f4kx8oiqm3ro0sasmpww foreign key (member_id) references member
 2023-06-30T18:34:21.258+09:00 DEBUG 7788 --- [main] org.hibernate.SQL                        : alter table if exists record add constraint FK5ic2ohoewcxeuaysnre2s7l4t foreign key (game_id) references game
 2023-06-30T18:34:21.260+09:00 DEBUG 7788 --- [main] org.hibernate.SQL                        : alter table if exists record add constraint FKfw266w08u31ocmlunkj50celm foreign key (player_id) references player
 2023-06-30T18:34:21.265+09:00  INFO 7788 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
 2023-06-30T18:34:21.275+09:00  INFO 7788 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
 2023-06-30T18:34:22.268+09:00  WARN 7788 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.auth.repository.MemberRepository
 2023-06-30T18:34:23.360+09:00  WARN 7788 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.player.repository.PlayerRepository
 2023-06-30T18:34:23.430+09:00  WARN 7788 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.game.repository.GameRepository
 2023-06-30T18:34:23.484+09:00  WARN 7788 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.record.repository.RecordRepository
 2023-06-30T18:34:23.536+09:00  WARN 7788 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.game.repository.GamePlayerRepository
 2023-06-30T18:34:23.571+09:00  WARN 7788 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.dotrecord.repository.DotRecordRepository
 2023-06-30T18:34:23.693+09:00  WARN 7788 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.post.repository.PostRepository
 2023-06-30T18:34:24.356+09:00  WARN 7788 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.post.repository.CommentRepository
 2023-06-30T18:34:24.500+09:00  WARN 7788 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
 2023-06-30T18:34:25.306+09:00  INFO 7788 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page: class path resource [static/index.html]
 2023-06-30T18:34:26.129+09:00  INFO 7788 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/dev/actuator'
 2023-06-30T18:34:26.276+09:00  INFO 7788 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3744c760, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7cb4fc46, org.springframework.security.web.context.SecurityContextHolderFilter@1d07fb2, org.springframework.security.web.header.HeaderWriterFilter@237e61ac, org.springframework.web.filter.CorsFilter@64b6d6dd, org.springframework.security.web.authentication.logout.LogoutFilter@232e4e1d, soccer.backend.auth.jwt.JwtFilter@1181a376, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@18b77ec9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@794c22cd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@ef09e1, org.springframework.security.web.session.SessionManagementFilter@75564689, org.springframework.security.web.access.ExceptionTranslationFilter@35c55050, org.springframework.security.web.access.intercept.AuthorizationFilter@589c648]
 2023-06-30T18:34:27.029+09:00  INFO 7788 --- [main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
 2023-06-30T18:34:27.031+09:00  INFO 7788 --- [main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
 2023-06-30T18:34:27.033+09:00  INFO 7788 --- [main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
 2023-06-30T18:34:27.165+09:00  INFO 7788 --- [main] s.b.domain.CommonDocControllerTest       : Started CommonDocControllerTest in 10.715 seconds (process running for 11.83)
 2023-06-30T18:34:27.525+09:00  INFO 7788 --- [main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
 2023-06-30T18:34:27.526+09:00  INFO 7788 --- [main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
 2023-06-30T18:34:27.527+09:00  INFO 7788 --- [main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
 2023-06-30T18:34:27.720+09:00  INFO 7788 --- [main] s.backend.global.logging.LogAspect       : Unknown called the method: errorSample
 2023-06-30T18:34:27.720+09:00  INFO 7788 --- [main] s.backend.global.logging.LogAspect       : Unknown method has finished: errorSample
 2023-06-30T18:34:27.960+09:00  INFO 7788 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
 2023-06-30T18:34:27.961+09:00  INFO 7788 --- [SpringApplicationShutdownHook] .SchemaDropperImpl$DelayedDropActionImpl : HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
 2023-06-30T18:34:27.962+09:00 DEBUG 7788 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists comment cascade 
 2023-06-30T18:34:27.965+09:00 DEBUG 7788 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists dot_record cascade 
 2023-06-30T18:34:27.967+09:00 DEBUG 7788 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists game cascade 
 2023-06-30T18:34:27.970+09:00 DEBUG 7788 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists game_player cascade 
 2023-06-30T18:34:27.971+09:00 DEBUG 7788 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists member cascade 
 2023-06-30T18:34:27.972+09:00 DEBUG 7788 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists player cascade 
 2023-06-30T18:34:27.973+09:00 DEBUG 7788 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists post cascade 
 2023-06-30T18:34:27.974+09:00 DEBUG 7788 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists record cascade 
 2023-06-30T18:34:27.976+09:00 DEBUG 7788 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop sequence if exists comment_seq
 2023-06-30T18:34:27.977+09:00 DEBUG 7788 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop sequence if exists post_seq
 2023-06-30T18:34:27.978+09:00  INFO 7788 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
 2023-06-30T18:34:27.980+09:00  INFO 7788 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
 2023-06-30T18:34:45.723+09:00  INFO 6020 --- [main] s.b.domain.CommonDocControllerTest       : Starting CommonDocControllerTest using Java 17.0.6 with PID 6020 (started by kimhobeen in C:\Users\kimhobeen\IdeaProjects\toy_project\soccerAnalyst\socceranalyst\backend)
 2023-06-30T18:34:45.725+09:00  INFO 6020 --- [main] s.b.domain.CommonDocControllerTest       : No active profile set, falling back to 1 default profile: "default"
 2023-06-30T18:34:46.928+09:00  INFO 6020 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
 2023-06-30T18:34:46.930+09:00  INFO 6020 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
 2023-06-30T18:34:47.143+09:00  INFO 6020 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 196 ms. Found 8 JPA repository interfaces.
 2023-06-30T18:34:47.161+09:00  INFO 6020 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
 2023-06-30T18:34:47.164+09:00  INFO 6020 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
 2023-06-30T18:34:47.188+09:00  INFO 6020 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.auth.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:34:47.188+09:00  INFO 6020 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.dotrecord.repository.DotRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:34:47.190+09:00  INFO 6020 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.game.repository.GamePlayerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:34:47.190+09:00  INFO 6020 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.game.repository.GameRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:34:47.190+09:00  INFO 6020 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.player.repository.PlayerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:34:47.192+09:00  INFO 6020 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.post.repository.CommentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:34:47.192+09:00  INFO 6020 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.post.repository.PostRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:34:47.193+09:00  INFO 6020 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.record.repository.RecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:34:47.193+09:00  INFO 6020 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
 2023-06-30T18:34:48.106+09:00  INFO 6020 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
 2023-06-30T18:34:48.196+09:00  INFO 6020 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.1.7.Final
 2023-06-30T18:34:48.664+09:00  INFO 6020 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
 2023-06-30T18:34:48.852+09:00  INFO 6020 --- [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
 2023-06-30T18:34:48.853+09:00  INFO 6020 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
 2023-06-30T18:34:48.886+09:00  INFO 6020 --- [main] SQL dialect                              : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
 2023-06-30T18:34:50.000+09:00 DEBUG 6020 --- [main] org.hibernate.SQL                        : drop table if exists comment cascade 
 2023-06-30T18:34:50.001+09:00 DEBUG 6020 --- [main] org.hibernate.SQL                        : drop table if exists dot_record cascade 
 2023-06-30T18:34:50.002+09:00 DEBUG 6020 --- [main] org.hibernate.SQL                        : drop table if exists game cascade 
 2023-06-30T18:34:50.002+09:00 DEBUG 6020 --- [main] org.hibernate.SQL                        : drop table if exists game_player cascade 
 2023-06-30T18:34:50.002+09:00 DEBUG 6020 --- [main] org.hibernate.SQL                        : drop table if exists member cascade 
 2023-06-30T18:34:50.003+09:00 DEBUG 6020 --- [main] org.hibernate.SQL                        : drop table if exists player cascade 
 2023-06-30T18:34:50.003+09:00 DEBUG 6020 --- [main] org.hibernate.SQL                        : drop table if exists post cascade 
 2023-06-30T18:34:50.003+09:00 DEBUG 6020 --- [main] org.hibernate.SQL                        : drop table if exists record cascade 
 2023-06-30T18:34:50.004+09:00 DEBUG 6020 --- [main] org.hibernate.SQL                        : drop sequence if exists comment_seq
 2023-06-30T18:34:50.004+09:00 DEBUG 6020 --- [main] org.hibernate.SQL                        : drop sequence if exists post_seq
 2023-06-30T18:34:50.010+09:00 DEBUG 6020 --- [main] org.hibernate.SQL                        : create sequence comment_seq start with 1 increment by 50
 2023-06-30T18:34:50.013+09:00 DEBUG 6020 --- [main] org.hibernate.SQL                        : create sequence post_seq start with 1 increment by 50
 2023-06-30T18:34:50.014+09:00 DEBUG 6020 --- [main] org.hibernate.SQL                        : create table comment (id bigint not null, created_date timestamp(6), modified_date timestamp(6), content varchar(255), member_id bigint, post_id bigint, primary key (id))
 2023-06-30T18:34:50.020+09:00 DEBUG 6020 --- [main] org.hibernate.SQL                        : create table dot_record (id bigint generated by default as identity, game_position smallint, game_time integer, player_id bigint, player_name varchar(255), shoot boolean not null, shootx float(24), shooty float(24), valid_shoot boolean not null, x float(24), y float(24), game_id bigint, primary key (id))
 2023-06-30T18:34:50.028+09:00 DEBUG 6020 --- [main] org.hibernate.SQL                        : create table game (id bigint generated by default as identity, ga integer, gf integer, created_at date, game_name varchar(255), location varchar(255), opponent varchar(255), member_id bigint, primary key (id))
 2023-06-30T18:34:50.030+09:00 DEBUG 6020 --- [main] org.hibernate.SQL                        : create table game_player (id bigint generated by default as identity, game_id bigint, player_id bigint, primary key (id))
 2023-06-30T18:34:50.032+09:00 DEBUG 6020 --- [main] org.hibernate.SQL                        : create table member (id bigint generated by default as identity, authority varchar(255), created_at timestamp(6), email varchar(255) not null, member_id varchar(255) not null, name varchar(255) not null, nickname varchar(255) not null, password varchar(255) not null, primary key (id))
 2023-06-30T18:34:50.034+09:00 DEBUG 6020 --- [main] org.hibernate.SQL                        : create table player (id bigint generated by default as identity, name varchar(255), position varchar(255), member_id bigint, primary key (id))
 2023-06-30T18:34:50.035+09:00 DEBUG 6020 --- [main] org.hibernate.SQL                        : create table post (post_id bigint not null, created_date timestamp(6), modified_date timestamp(6), content varchar(255), title varchar(255), member_id bigint, primary key (post_id))
 2023-06-30T18:34:50.036+09:00 DEBUG 6020 --- [main] org.hibernate.SQL                        : create table record (id bigint generated by default as identity, assist integer, chance_making integer, contention integer, cross_pass integer, dribble integer, game_position varchar(255), goal integer, intercept integer, long_pass integer, main varchar(255), pass integer, shoot integer, success_contention integer, success_cross_pass integer, success_dribble integer, success_long_pass integer, success_pass integer, tackle integer, time_in integer, time_out integer, touch integer, turnover integer, valid_shoot integer, game_id bigint, player_id bigint, primary key (id))
 2023-06-30T18:34:50.038+09:00 DEBUG 6020 --- [main] org.hibernate.SQL                        : alter table if exists comment add constraint FKmrrrpi513ssu63i2783jyiv9m foreign key (member_id) references member
 2023-06-30T18:34:50.044+09:00 DEBUG 6020 --- [main] org.hibernate.SQL                        : alter table if exists comment add constraint FKs1slvnkuemjsq2kj4h3vhx7i1 foreign key (post_id) references post
 2023-06-30T18:34:50.045+09:00 DEBUG 6020 --- [main] org.hibernate.SQL                        : alter table if exists dot_record add constraint FK7vn3bjp9sr541b5t6554xw0va foreign key (game_id) references game
 2023-06-30T18:34:50.046+09:00 DEBUG 6020 --- [main] org.hibernate.SQL                        : alter table if exists game add constraint FKlhk3xa6l9tc50g6mxkykgg5sx foreign key (member_id) references member
 2023-06-30T18:34:50.048+09:00 DEBUG 6020 --- [main] org.hibernate.SQL                        : alter table if exists game_player add constraint FK8so14tnd5mqdjqabugc0cycxu foreign key (game_id) references game
 2023-06-30T18:34:50.049+09:00 DEBUG 6020 --- [main] org.hibernate.SQL                        : alter table if exists game_player add constraint FK7ntwi66eylpagi55pmm4i61l5 foreign key (player_id) references player
 2023-06-30T18:34:50.051+09:00 DEBUG 6020 --- [main] org.hibernate.SQL                        : alter table if exists player add constraint FKtky0mr5eq3kww4rqiscxivebo foreign key (member_id) references member
 2023-06-30T18:34:50.053+09:00 DEBUG 6020 --- [main] org.hibernate.SQL                        : alter table if exists post add constraint FK83s99f4kx8oiqm3ro0sasmpww foreign key (member_id) references member
 2023-06-30T18:34:50.055+09:00 DEBUG 6020 --- [main] org.hibernate.SQL                        : alter table if exists record add constraint FK5ic2ohoewcxeuaysnre2s7l4t foreign key (game_id) references game
 2023-06-30T18:34:50.056+09:00 DEBUG 6020 --- [main] org.hibernate.SQL                        : alter table if exists record add constraint FKfw266w08u31ocmlunkj50celm foreign key (player_id) references player
 2023-06-30T18:34:50.061+09:00  INFO 6020 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
 2023-06-30T18:34:50.072+09:00  INFO 6020 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
 2023-06-30T18:34:51.149+09:00  WARN 6020 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.auth.repository.MemberRepository
 2023-06-30T18:34:52.166+09:00  WARN 6020 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.player.repository.PlayerRepository
 2023-06-30T18:34:52.243+09:00  WARN 6020 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.game.repository.GameRepository
 2023-06-30T18:34:52.290+09:00  WARN 6020 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.record.repository.RecordRepository
 2023-06-30T18:34:52.361+09:00  WARN 6020 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.game.repository.GamePlayerRepository
 2023-06-30T18:34:52.410+09:00  WARN 6020 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.dotrecord.repository.DotRecordRepository
 2023-06-30T18:34:52.511+09:00  WARN 6020 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.post.repository.PostRepository
 2023-06-30T18:34:53.094+09:00  WARN 6020 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.post.repository.CommentRepository
 2023-06-30T18:34:53.207+09:00  WARN 6020 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
 2023-06-30T18:34:53.798+09:00  INFO 6020 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page: class path resource [static/index.html]
 2023-06-30T18:34:54.495+09:00  INFO 6020 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/dev/actuator'
 2023-06-30T18:34:54.819+09:00  INFO 6020 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@f57ced1, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1d9c18b9, org.springframework.security.web.context.SecurityContextHolderFilter@47e6004c, org.springframework.security.web.header.HeaderWriterFilter@794c22cd, org.springframework.web.filter.CorsFilter@447cdbaa, org.springframework.security.web.authentication.logout.LogoutFilter@7cb4fc46, soccer.backend.auth.jwt.JwtFilter@5e774546, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@36b5dbdf, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7b0a864e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6f67291f, org.springframework.security.web.session.SessionManagementFilter@2693b289, org.springframework.security.web.access.ExceptionTranslationFilter@34adce96, org.springframework.security.web.access.intercept.AuthorizationFilter@7d2dfe9c]
 2023-06-30T18:34:55.637+09:00  INFO 6020 --- [main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
 2023-06-30T18:34:55.637+09:00  INFO 6020 --- [main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
 2023-06-30T18:34:55.639+09:00  INFO 6020 --- [main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
 2023-06-30T18:34:55.832+09:00  INFO 6020 --- [main] s.b.domain.CommonDocControllerTest       : Started CommonDocControllerTest in 10.631 seconds (process running for 11.85)
 2023-06-30T18:34:56.129+09:00  INFO 6020 --- [main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
 2023-06-30T18:34:56.130+09:00  INFO 6020 --- [main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
 2023-06-30T18:34:56.131+09:00  INFO 6020 --- [main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
 2023-06-30T18:34:56.315+09:00  INFO 6020 --- [main] s.backend.global.logging.LogAspect       : handleMethodArgumentNotValidException 실행
 2023-06-30T18:34:56.316+09:00  INFO 6020 --- [main] s.backend.global.logging.LogAspect       : Unknown Error detail: 

org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public void soccer.backend.restdocs.utils.CommonDocController.errorSample(soccer.backend.restdocs.utils.CommonDocController$SampleRequest) throws java.lang.Exception: [Field error in object 'sampleRequest' on field 'email': rejected value [hhh.naver]; codes [Email.sampleRequest.email,Email.email,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [sampleRequest.email,email]; arguments []; default message [email],[Ljakarta.validation.constraints.Pattern$Flag;@c93275f,.*]; default message [must be a well-formed email address]]
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:144)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:181)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:148)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:563)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:631)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)
	at soccer.backend.restdocs.controller.CommonDocControllerTest.errorSample(CommonDocControllerTest.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:217)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)

 2023-06-30T18:34:56.324+09:00  INFO 6020 --- [main] s.backend.global.logging.LogAspect       : Unknown called the method: handleMethodArgumentNotValidException
 2023-06-30T18:34:56.327+09:00  INFO 6020 --- [main] s.backend.global.logging.LogAspect       : Unknown method has finished: handleMethodArgumentNotValidException
 2023-06-30T18:34:56.610+09:00  INFO 6020 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
 2023-06-30T18:34:56.611+09:00  INFO 6020 --- [SpringApplicationShutdownHook] .SchemaDropperImpl$DelayedDropActionImpl : HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
 2023-06-30T18:34:56.611+09:00 DEBUG 6020 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists comment cascade 
 2023-06-30T18:34:56.613+09:00 DEBUG 6020 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists dot_record cascade 
 2023-06-30T18:34:56.614+09:00 DEBUG 6020 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists game cascade 
 2023-06-30T18:34:56.615+09:00 DEBUG 6020 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists game_player cascade 
 2023-06-30T18:34:56.616+09:00 DEBUG 6020 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists member cascade 
 2023-06-30T18:34:56.617+09:00 DEBUG 6020 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists player cascade 
 2023-06-30T18:34:56.617+09:00 DEBUG 6020 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists post cascade 
 2023-06-30T18:34:56.618+09:00 DEBUG 6020 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists record cascade 
 2023-06-30T18:34:56.618+09:00 DEBUG 6020 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop sequence if exists comment_seq
 2023-06-30T18:34:56.619+09:00 DEBUG 6020 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop sequence if exists post_seq
 2023-06-30T18:34:56.621+09:00  INFO 6020 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
 2023-06-30T18:34:56.623+09:00  INFO 6020 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
 2023-06-30T18:35:55.108+09:00  INFO 19448 --- [main] s.b.domain.CommonDocControllerTest       : Starting CommonDocControllerTest using Java 17.0.6 with PID 19448 (started by kimhobeen in C:\Users\kimhobeen\IdeaProjects\toy_project\soccerAnalyst\socceranalyst\backend)
 2023-06-30T18:35:55.110+09:00  INFO 19448 --- [main] s.b.domain.CommonDocControllerTest       : No active profile set, falling back to 1 default profile: "default"
 2023-06-30T18:35:56.426+09:00  INFO 19448 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
 2023-06-30T18:35:56.429+09:00  INFO 19448 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
 2023-06-30T18:35:56.653+09:00  INFO 19448 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 208 ms. Found 8 JPA repository interfaces.
 2023-06-30T18:35:56.673+09:00  INFO 19448 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
 2023-06-30T18:35:56.675+09:00  INFO 19448 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
 2023-06-30T18:35:56.696+09:00  INFO 19448 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.auth.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:35:56.697+09:00  INFO 19448 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.dotrecord.repository.DotRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:35:56.698+09:00  INFO 19448 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.game.repository.GamePlayerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:35:56.699+09:00  INFO 19448 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.game.repository.GameRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:35:56.700+09:00  INFO 19448 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.player.repository.PlayerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:35:56.702+09:00  INFO 19448 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.post.repository.CommentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:35:56.702+09:00  INFO 19448 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.post.repository.PostRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:35:56.703+09:00  INFO 19448 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.record.repository.RecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T18:35:56.703+09:00  INFO 19448 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.
 2023-06-30T18:35:57.654+09:00  INFO 19448 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
 2023-06-30T18:35:57.792+09:00  INFO 19448 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.1.7.Final
 2023-06-30T18:35:58.243+09:00  INFO 19448 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
 2023-06-30T18:35:58.435+09:00  INFO 19448 --- [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
 2023-06-30T18:35:58.437+09:00  INFO 19448 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
 2023-06-30T18:35:58.479+09:00  INFO 19448 --- [main] SQL dialect                              : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
 2023-06-30T18:35:59.577+09:00 DEBUG 19448 --- [main] org.hibernate.SQL                        : drop table if exists comment cascade 
 2023-06-30T18:35:59.579+09:00 DEBUG 19448 --- [main] org.hibernate.SQL                        : drop table if exists dot_record cascade 
 2023-06-30T18:35:59.580+09:00 DEBUG 19448 --- [main] org.hibernate.SQL                        : drop table if exists game cascade 
 2023-06-30T18:35:59.580+09:00 DEBUG 19448 --- [main] org.hibernate.SQL                        : drop table if exists game_player cascade 
 2023-06-30T18:35:59.580+09:00 DEBUG 19448 --- [main] org.hibernate.SQL                        : drop table if exists member cascade 
 2023-06-30T18:35:59.580+09:00 DEBUG 19448 --- [main] org.hibernate.SQL                        : drop table if exists player cascade 
 2023-06-30T18:35:59.580+09:00 DEBUG 19448 --- [main] org.hibernate.SQL                        : drop table if exists post cascade 
 2023-06-30T18:35:59.581+09:00 DEBUG 19448 --- [main] org.hibernate.SQL                        : drop table if exists record cascade 
 2023-06-30T18:35:59.581+09:00 DEBUG 19448 --- [main] org.hibernate.SQL                        : drop sequence if exists comment_seq
 2023-06-30T18:35:59.581+09:00 DEBUG 19448 --- [main] org.hibernate.SQL                        : drop sequence if exists post_seq
 2023-06-30T18:35:59.586+09:00 DEBUG 19448 --- [main] org.hibernate.SQL                        : create sequence comment_seq start with 1 increment by 50
 2023-06-30T18:35:59.588+09:00 DEBUG 19448 --- [main] org.hibernate.SQL                        : create sequence post_seq start with 1 increment by 50
 2023-06-30T18:35:59.589+09:00 DEBUG 19448 --- [main] org.hibernate.SQL                        : create table comment (id bigint not null, created_date timestamp(6), modified_date timestamp(6), content varchar(255), member_id bigint, post_id bigint, primary key (id))
 2023-06-30T18:35:59.596+09:00 DEBUG 19448 --- [main] org.hibernate.SQL                        : create table dot_record (id bigint generated by default as identity, game_position smallint, game_time integer, player_id bigint, player_name varchar(255), shoot boolean not null, shootx float(24), shooty float(24), valid_shoot boolean not null, x float(24), y float(24), game_id bigint, primary key (id))
 2023-06-30T18:35:59.602+09:00 DEBUG 19448 --- [main] org.hibernate.SQL                        : create table game (id bigint generated by default as identity, ga integer, gf integer, created_at date, game_name varchar(255), location varchar(255), opponent varchar(255), member_id bigint, primary key (id))
 2023-06-30T18:35:59.604+09:00 DEBUG 19448 --- [main] org.hibernate.SQL                        : create table game_player (id bigint generated by default as identity, game_id bigint, player_id bigint, primary key (id))
 2023-06-30T18:35:59.606+09:00 DEBUG 19448 --- [main] org.hibernate.SQL                        : create table member (id bigint generated by default as identity, authority varchar(255), created_at timestamp(6), email varchar(255) not null, member_id varchar(255) not null, name varchar(255) not null, nickname varchar(255) not null, password varchar(255) not null, primary key (id))
 2023-06-30T18:35:59.608+09:00 DEBUG 19448 --- [main] org.hibernate.SQL                        : create table player (id bigint generated by default as identity, name varchar(255), position varchar(255), member_id bigint, primary key (id))
 2023-06-30T18:35:59.610+09:00 DEBUG 19448 --- [main] org.hibernate.SQL                        : create table post (post_id bigint not null, created_date timestamp(6), modified_date timestamp(6), content varchar(255), title varchar(255), member_id bigint, primary key (post_id))
 2023-06-30T18:35:59.614+09:00 DEBUG 19448 --- [main] org.hibernate.SQL                        : create table record (id bigint generated by default as identity, assist integer, chance_making integer, contention integer, cross_pass integer, dribble integer, game_position varchar(255), goal integer, intercept integer, long_pass integer, main varchar(255), pass integer, shoot integer, success_contention integer, success_cross_pass integer, success_dribble integer, success_long_pass integer, success_pass integer, tackle integer, time_in integer, time_out integer, touch integer, turnover integer, valid_shoot integer, game_id bigint, player_id bigint, primary key (id))
 2023-06-30T18:35:59.617+09:00 DEBUG 19448 --- [main] org.hibernate.SQL                        : alter table if exists comment add constraint FKmrrrpi513ssu63i2783jyiv9m foreign key (member_id) references member
 2023-06-30T18:35:59.626+09:00 DEBUG 19448 --- [main] org.hibernate.SQL                        : alter table if exists comment add constraint FKs1slvnkuemjsq2kj4h3vhx7i1 foreign key (post_id) references post
 2023-06-30T18:35:59.628+09:00 DEBUG 19448 --- [main] org.hibernate.SQL                        : alter table if exists dot_record add constraint FK7vn3bjp9sr541b5t6554xw0va foreign key (game_id) references game
 2023-06-30T18:35:59.629+09:00 DEBUG 19448 --- [main] org.hibernate.SQL                        : alter table if exists game add constraint FKlhk3xa6l9tc50g6mxkykgg5sx foreign key (member_id) references member
 2023-06-30T18:35:59.631+09:00 DEBUG 19448 --- [main] org.hibernate.SQL                        : alter table if exists game_player add constraint FK8so14tnd5mqdjqabugc0cycxu foreign key (game_id) references game
 2023-06-30T18:35:59.632+09:00 DEBUG 19448 --- [main] org.hibernate.SQL                        : alter table if exists game_player add constraint FK7ntwi66eylpagi55pmm4i61l5 foreign key (player_id) references player
 2023-06-30T18:35:59.634+09:00 DEBUG 19448 --- [main] org.hibernate.SQL                        : alter table if exists player add constraint FKtky0mr5eq3kww4rqiscxivebo foreign key (member_id) references member
 2023-06-30T18:35:59.637+09:00 DEBUG 19448 --- [main] org.hibernate.SQL                        : alter table if exists post add constraint FK83s99f4kx8oiqm3ro0sasmpww foreign key (member_id) references member
 2023-06-30T18:35:59.639+09:00 DEBUG 19448 --- [main] org.hibernate.SQL                        : alter table if exists record add constraint FK5ic2ohoewcxeuaysnre2s7l4t foreign key (game_id) references game
 2023-06-30T18:35:59.640+09:00 DEBUG 19448 --- [main] org.hibernate.SQL                        : alter table if exists record add constraint FKfw266w08u31ocmlunkj50celm foreign key (player_id) references player
 2023-06-30T18:35:59.645+09:00  INFO 19448 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
 2023-06-30T18:35:59.655+09:00  INFO 19448 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
 2023-06-30T18:36:00.774+09:00  WARN 19448 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.auth.repository.MemberRepository
 2023-06-30T18:36:02.286+09:00  WARN 19448 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.player.repository.PlayerRepository
 2023-06-30T18:36:02.370+09:00  WARN 19448 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.game.repository.GameRepository
 2023-06-30T18:36:02.448+09:00  WARN 19448 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.record.repository.RecordRepository
 2023-06-30T18:36:02.557+09:00  WARN 19448 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.game.repository.GamePlayerRepository
 2023-06-30T18:36:02.603+09:00  WARN 19448 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.dotrecord.repository.DotRecordRepository
 2023-06-30T18:36:02.738+09:00  WARN 19448 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.post.repository.PostRepository
 2023-06-30T18:36:03.225+09:00  WARN 19448 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.post.repository.CommentRepository
 2023-06-30T18:36:03.355+09:00  WARN 19448 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
 2023-06-30T18:36:04.029+09:00  INFO 19448 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page: class path resource [static/index.html]
 2023-06-30T18:36:04.754+09:00  INFO 19448 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/dev/actuator'
 2023-06-30T18:36:05.068+09:00  INFO 19448 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6f67291f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1243ad9a, org.springframework.security.web.context.SecurityContextHolderFilter@482652f7, org.springframework.security.web.header.HeaderWriterFilter@358caf3a, org.springframework.web.filter.CorsFilter@30c085f3, org.springframework.security.web.authentication.logout.LogoutFilter@5b628376, soccer.backend.auth.jwt.JwtFilter@5479abd8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7b0a864e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@12b9d405, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2004f99, org.springframework.security.web.session.SessionManagementFilter@7c5ae5c3, org.springframework.security.web.access.ExceptionTranslationFilter@5bb0122, org.springframework.security.web.access.intercept.AuthorizationFilter@1d9c18b9]
 2023-06-30T18:36:05.734+09:00  INFO 19448 --- [main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
 2023-06-30T18:36:05.735+09:00  INFO 19448 --- [main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
 2023-06-30T18:36:05.736+09:00  INFO 19448 --- [main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
 2023-06-30T18:36:05.853+09:00  INFO 19448 --- [main] s.b.domain.CommonDocControllerTest       : Started CommonDocControllerTest in 11.304 seconds (process running for 12.532)
 2023-06-30T18:36:06.176+09:00  INFO 19448 --- [main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
 2023-06-30T18:36:06.176+09:00  INFO 19448 --- [main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
 2023-06-30T18:36:06.177+09:00  INFO 19448 --- [main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
 2023-06-30T18:36:06.384+09:00  INFO 19448 --- [main] s.backend.global.logging.LogAspect       : handleMethodArgumentNotValidException 실행
 2023-06-30T18:36:06.385+09:00  INFO 19448 --- [main] s.backend.global.logging.LogAspect       : Unknown Error detail: 

org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public void soccer.backend.restdocs.utils.CommonDocController.errorSample(soccer.backend.restdocs.utils.CommonDocController$SampleRequest) throws java.lang.Exception: [Field error in object 'sampleRequest' on field 'email': rejected value [hhh.naver]; codes [Email.sampleRequest.email,Email.email,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [sampleRequest.email,email]; arguments []; default message [email],[Ljakarta.validation.constraints.Pattern$Flag;@55a869a9,.*]; default message [must be a well-formed email address]]
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:144)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:181)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:148)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:563)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:631)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)
	at soccer.backend.restdocs.controller.CommonDocControllerTest.errorSample(CommonDocControllerTest.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:217)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)

 2023-06-30T18:36:06.398+09:00  INFO 19448 --- [main] s.backend.global.logging.LogAspect       : Unknown called the method: handleMethodArgumentNotValidException
 2023-06-30T18:36:06.404+09:00  INFO 19448 --- [main] s.backend.global.logging.LogAspect       : Unknown method has finished: handleMethodArgumentNotValidException
 2023-06-30T18:36:06.756+09:00  INFO 19448 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
 2023-06-30T18:36:06.757+09:00  INFO 19448 --- [SpringApplicationShutdownHook] .SchemaDropperImpl$DelayedDropActionImpl : HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
 2023-06-30T18:36:06.758+09:00 DEBUG 19448 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists comment cascade 
 2023-06-30T18:36:06.761+09:00 DEBUG 19448 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists dot_record cascade 
 2023-06-30T18:36:06.762+09:00 DEBUG 19448 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists game cascade 
 2023-06-30T18:36:06.764+09:00 DEBUG 19448 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists game_player cascade 
 2023-06-30T18:36:06.765+09:00 DEBUG 19448 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists member cascade 
 2023-06-30T18:36:06.767+09:00 DEBUG 19448 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists player cascade 
 2023-06-30T18:36:06.769+09:00 DEBUG 19448 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists post cascade 
 2023-06-30T18:36:06.769+09:00 DEBUG 19448 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists record cascade 
 2023-06-30T18:36:06.770+09:00 DEBUG 19448 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop sequence if exists comment_seq
 2023-06-30T18:36:06.770+09:00 DEBUG 19448 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop sequence if exists post_seq
 2023-06-30T18:36:06.772+09:00  INFO 19448 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
 2023-06-30T18:36:06.774+09:00  INFO 19448 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
 2023-06-30T19:01:02.032+09:00  INFO 11868 --- [main] s.b.domain.CommonDocControllerTest       : Starting CommonDocControllerTest using Java 17.0.6 with PID 11868 (started by kimhobeen in C:\Users\kimhobeen\IdeaProjects\toy_project\soccerAnalyst\socceranalyst\backend)
 2023-06-30T19:01:02.034+09:00  INFO 11868 --- [main] s.b.domain.CommonDocControllerTest       : No active profile set, falling back to 1 default profile: "default"
 2023-06-30T19:01:03.403+09:00  INFO 11868 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
 2023-06-30T19:01:03.406+09:00  INFO 11868 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
 2023-06-30T19:01:03.659+09:00  INFO 11868 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 239 ms. Found 8 JPA repository interfaces.
 2023-06-30T19:01:03.684+09:00  INFO 11868 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
 2023-06-30T19:01:03.687+09:00  INFO 11868 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
 2023-06-30T19:01:03.708+09:00  INFO 11868 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.auth.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T19:01:03.709+09:00  INFO 11868 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.dotrecord.repository.DotRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T19:01:03.710+09:00  INFO 11868 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.game.repository.GamePlayerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T19:01:03.711+09:00  INFO 11868 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.game.repository.GameRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T19:01:03.712+09:00  INFO 11868 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.player.repository.PlayerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T19:01:03.713+09:00  INFO 11868 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.post.repository.CommentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T19:01:03.714+09:00  INFO 11868 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.post.repository.PostRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T19:01:03.715+09:00  INFO 11868 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.record.repository.RecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T19:01:03.715+09:00  INFO 11868 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
 2023-06-30T19:01:04.831+09:00  INFO 11868 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
 2023-06-30T19:01:04.964+09:00  INFO 11868 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.1.7.Final
 2023-06-30T19:01:05.468+09:00  INFO 11868 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
 2023-06-30T19:01:05.678+09:00  INFO 11868 --- [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
 2023-06-30T19:01:05.681+09:00  INFO 11868 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
 2023-06-30T19:01:05.720+09:00  INFO 11868 --- [main] SQL dialect                              : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
 2023-06-30T19:01:07.051+09:00 DEBUG 11868 --- [main] org.hibernate.SQL                        : drop table if exists comment cascade 
 2023-06-30T19:01:07.053+09:00 DEBUG 11868 --- [main] org.hibernate.SQL                        : drop table if exists dot_record cascade 
 2023-06-30T19:01:07.053+09:00 DEBUG 11868 --- [main] org.hibernate.SQL                        : drop table if exists game cascade 
 2023-06-30T19:01:07.053+09:00 DEBUG 11868 --- [main] org.hibernate.SQL                        : drop table if exists game_player cascade 
 2023-06-30T19:01:07.054+09:00 DEBUG 11868 --- [main] org.hibernate.SQL                        : drop table if exists member cascade 
 2023-06-30T19:01:07.054+09:00 DEBUG 11868 --- [main] org.hibernate.SQL                        : drop table if exists player cascade 
 2023-06-30T19:01:07.054+09:00 DEBUG 11868 --- [main] org.hibernate.SQL                        : drop table if exists post cascade 
 2023-06-30T19:01:07.054+09:00 DEBUG 11868 --- [main] org.hibernate.SQL                        : drop table if exists record cascade 
 2023-06-30T19:01:07.055+09:00 DEBUG 11868 --- [main] org.hibernate.SQL                        : drop sequence if exists comment_seq
 2023-06-30T19:01:07.055+09:00 DEBUG 11868 --- [main] org.hibernate.SQL                        : drop sequence if exists post_seq
 2023-06-30T19:01:07.061+09:00 DEBUG 11868 --- [main] org.hibernate.SQL                        : create sequence comment_seq start with 1 increment by 50
 2023-06-30T19:01:07.063+09:00 DEBUG 11868 --- [main] org.hibernate.SQL                        : create sequence post_seq start with 1 increment by 50
 2023-06-30T19:01:07.064+09:00 DEBUG 11868 --- [main] org.hibernate.SQL                        : create table comment (id bigint not null, created_date timestamp(6), modified_date timestamp(6), content varchar(255), member_id bigint, post_id bigint, primary key (id))
 2023-06-30T19:01:07.069+09:00 DEBUG 11868 --- [main] org.hibernate.SQL                        : create table dot_record (id bigint generated by default as identity, game_position smallint, game_time integer, player_id bigint, player_name varchar(255), shoot boolean not null, shootx float(24), shooty float(24), valid_shoot boolean not null, x float(24), y float(24), game_id bigint, primary key (id))
 2023-06-30T19:01:07.073+09:00 DEBUG 11868 --- [main] org.hibernate.SQL                        : create table game (id bigint generated by default as identity, ga integer, gf integer, created_at date, game_name varchar(255), location varchar(255), opponent varchar(255), member_id bigint, primary key (id))
 2023-06-30T19:01:07.075+09:00 DEBUG 11868 --- [main] org.hibernate.SQL                        : create table game_player (id bigint generated by default as identity, game_id bigint, player_id bigint, primary key (id))
 2023-06-30T19:01:07.076+09:00 DEBUG 11868 --- [main] org.hibernate.SQL                        : create table member (id bigint generated by default as identity, authority varchar(255), created_at timestamp(6), email varchar(255) not null, member_id varchar(255) not null, name varchar(255) not null, nickname varchar(255) not null, password varchar(255) not null, primary key (id))
 2023-06-30T19:01:07.077+09:00 DEBUG 11868 --- [main] org.hibernate.SQL                        : create table player (id bigint generated by default as identity, name varchar(255), position varchar(255), member_id bigint, primary key (id))
 2023-06-30T19:01:07.078+09:00 DEBUG 11868 --- [main] org.hibernate.SQL                        : create table post (post_id bigint not null, created_date timestamp(6), modified_date timestamp(6), content varchar(255), title varchar(255), member_id bigint, primary key (post_id))
 2023-06-30T19:01:07.079+09:00 DEBUG 11868 --- [main] org.hibernate.SQL                        : create table record (id bigint generated by default as identity, assist integer, chance_making integer, contention integer, cross_pass integer, dribble integer, game_position varchar(255), goal integer, intercept integer, long_pass integer, main varchar(255), pass integer, shoot integer, success_contention integer, success_cross_pass integer, success_dribble integer, success_long_pass integer, success_pass integer, tackle integer, time_in integer, time_out integer, touch integer, turnover integer, valid_shoot integer, game_id bigint, player_id bigint, primary key (id))
 2023-06-30T19:01:07.080+09:00 DEBUG 11868 --- [main] org.hibernate.SQL                        : alter table if exists comment add constraint FKmrrrpi513ssu63i2783jyiv9m foreign key (member_id) references member
 2023-06-30T19:01:07.086+09:00 DEBUG 11868 --- [main] org.hibernate.SQL                        : alter table if exists comment add constraint FKs1slvnkuemjsq2kj4h3vhx7i1 foreign key (post_id) references post
 2023-06-30T19:01:07.087+09:00 DEBUG 11868 --- [main] org.hibernate.SQL                        : alter table if exists dot_record add constraint FK7vn3bjp9sr541b5t6554xw0va foreign key (game_id) references game
 2023-06-30T19:01:07.088+09:00 DEBUG 11868 --- [main] org.hibernate.SQL                        : alter table if exists game add constraint FKlhk3xa6l9tc50g6mxkykgg5sx foreign key (member_id) references member
 2023-06-30T19:01:07.089+09:00 DEBUG 11868 --- [main] org.hibernate.SQL                        : alter table if exists game_player add constraint FK8so14tnd5mqdjqabugc0cycxu foreign key (game_id) references game
 2023-06-30T19:01:07.090+09:00 DEBUG 11868 --- [main] org.hibernate.SQL                        : alter table if exists game_player add constraint FK7ntwi66eylpagi55pmm4i61l5 foreign key (player_id) references player
 2023-06-30T19:01:07.092+09:00 DEBUG 11868 --- [main] org.hibernate.SQL                        : alter table if exists player add constraint FKtky0mr5eq3kww4rqiscxivebo foreign key (member_id) references member
 2023-06-30T19:01:07.095+09:00 DEBUG 11868 --- [main] org.hibernate.SQL                        : alter table if exists post add constraint FK83s99f4kx8oiqm3ro0sasmpww foreign key (member_id) references member
 2023-06-30T19:01:07.096+09:00 DEBUG 11868 --- [main] org.hibernate.SQL                        : alter table if exists record add constraint FK5ic2ohoewcxeuaysnre2s7l4t foreign key (game_id) references game
 2023-06-30T19:01:07.097+09:00 DEBUG 11868 --- [main] org.hibernate.SQL                        : alter table if exists record add constraint FKfw266w08u31ocmlunkj50celm foreign key (player_id) references player
 2023-06-30T19:01:07.102+09:00  INFO 11868 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
 2023-06-30T19:01:07.113+09:00  INFO 11868 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
 2023-06-30T19:01:08.256+09:00  WARN 11868 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.auth.repository.MemberRepository
 2023-06-30T19:01:09.568+09:00  WARN 11868 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.player.repository.PlayerRepository
 2023-06-30T19:01:09.657+09:00  WARN 11868 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.game.repository.GameRepository
 2023-06-30T19:01:09.700+09:00  WARN 11868 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.record.repository.RecordRepository
 2023-06-30T19:01:09.753+09:00  WARN 11868 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.game.repository.GamePlayerRepository
 2023-06-30T19:01:09.804+09:00  WARN 11868 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.dotrecord.repository.DotRecordRepository
 2023-06-30T19:01:09.928+09:00  WARN 11868 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.post.repository.PostRepository
 2023-06-30T19:01:10.726+09:00  WARN 11868 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.post.repository.CommentRepository
 2023-06-30T19:01:10.870+09:00  WARN 11868 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
 2023-06-30T19:01:11.686+09:00  INFO 11868 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page: class path resource [static/index.html]
 2023-06-30T19:01:12.400+09:00  INFO 11868 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/dev/actuator'
 2023-06-30T19:01:12.564+09:00  INFO 11868 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1ca574db, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5323b690, org.springframework.security.web.context.SecurityContextHolderFilter@35daccb8, org.springframework.security.web.header.HeaderWriterFilter@38067d41, org.springframework.web.filter.CorsFilter@7fd65f9a, org.springframework.security.web.authentication.logout.LogoutFilter@5efb7f82, soccer.backend.auth.jwt.JwtFilter@f48a79a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@52e296c0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7aeb7bd6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@38fc1904, org.springframework.security.web.session.SessionManagementFilter@57082d16, org.springframework.security.web.access.ExceptionTranslationFilter@47c8c176, org.springframework.security.web.access.intercept.AuthorizationFilter@124ba047]
 2023-06-30T19:01:13.628+09:00  INFO 11868 --- [main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
 2023-06-30T19:01:13.629+09:00  INFO 11868 --- [main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
 2023-06-30T19:01:13.631+09:00  INFO 11868 --- [main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
 2023-06-30T19:01:13.748+09:00  INFO 11868 --- [main] s.b.domain.CommonDocControllerTest       : Started CommonDocControllerTest in 12.377 seconds (process running for 14.161)
 2023-06-30T19:01:14.092+09:00  INFO 11868 --- [main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
 2023-06-30T19:01:14.093+09:00  INFO 11868 --- [main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
 2023-06-30T19:01:14.094+09:00  INFO 11868 --- [main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
 2023-06-30T19:01:14.294+09:00  INFO 11868 --- [main] s.backend.global.logging.LogAspect       : handleMethodArgumentNotValidException 실행
 2023-06-30T19:01:14.296+09:00  INFO 11868 --- [main] s.backend.global.logging.LogAspect       : Unknown Error detail: 

org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public void soccer.backend.restdocs.utils.CommonDocController.errorSample(soccer.backend.restdocs.utils.CommonDocController$SampleRequest) throws java.lang.Exception: [Field error in object 'sampleRequest' on field 'email': rejected value [hhh.naver]; codes [Email.sampleRequest.email,Email.email,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [sampleRequest.email,email]; arguments []; default message [email],[Ljakarta.validation.constraints.Pattern$Flag;@4fb0884d,.*]; default message [must be a well-formed email address]]
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:144)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:181)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:148)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:563)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:631)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)
	at soccer.backend.restdocs.controller.CommonDocControllerTest.errorSample(CommonDocControllerTest.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:217)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)

 2023-06-30T19:01:14.304+09:00  INFO 11868 --- [main] s.backend.global.logging.LogAspect       : Unknown called the method: handleMethodArgumentNotValidException
 2023-06-30T19:01:14.307+09:00  INFO 11868 --- [main] s.backend.global.logging.LogAspect       : Unknown method has finished: handleMethodArgumentNotValidException
 2023-06-30T19:04:47.866+09:00  WARN 11868 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=3m42s70ms961µs).
 2023-06-30T19:04:48.064+09:00  INFO 11868 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
 2023-06-30T19:04:48.067+09:00  INFO 11868 --- [SpringApplicationShutdownHook] .SchemaDropperImpl$DelayedDropActionImpl : HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
 2023-06-30T19:04:48.068+09:00 DEBUG 11868 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists comment cascade 
 2023-06-30T19:04:48.070+09:00 DEBUG 11868 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists dot_record cascade 
 2023-06-30T19:04:48.071+09:00 DEBUG 11868 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists game cascade 
 2023-06-30T19:04:48.072+09:00 DEBUG 11868 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists game_player cascade 
 2023-06-30T19:04:48.074+09:00 DEBUG 11868 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists member cascade 
 2023-06-30T19:04:48.075+09:00 DEBUG 11868 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists player cascade 
 2023-06-30T19:04:48.076+09:00 DEBUG 11868 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists post cascade 
 2023-06-30T19:04:48.076+09:00 DEBUG 11868 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists record cascade 
 2023-06-30T19:04:48.076+09:00 DEBUG 11868 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop sequence if exists comment_seq
 2023-06-30T19:04:48.077+09:00 DEBUG 11868 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop sequence if exists post_seq
 2023-06-30T19:04:48.079+09:00  INFO 11868 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
 2023-06-30T19:04:48.083+09:00  INFO 11868 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
 2023-06-30T19:04:53.185+09:00  INFO 5904 --- [main] s.b.domain.CommonDocControllerTest       : Starting CommonDocControllerTest using Java 17.0.6 with PID 5904 (started by kimhobeen in C:\Users\kimhobeen\IdeaProjects\toy_project\soccerAnalyst\socceranalyst\backend)
 2023-06-30T19:04:53.187+09:00  INFO 5904 --- [main] s.b.domain.CommonDocControllerTest       : No active profile set, falling back to 1 default profile: "default"
 2023-06-30T19:04:53.496+09:00  WARN 5904 --- [main] o.s.w.c.s.GenericWebApplicationContext   : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [soccer.backend.BackendApplication]
 2023-06-30T19:04:53.718+09:00 ERROR 5904 --- [main] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [soccer.backend.BackendApplication]
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:178)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:398)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:283)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:344)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:115)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:747)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:565)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:310)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1388)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:184)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:118)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: org.springframework.context.annotation.ConflictingBeanDefinitionException: Annotation-specified bean name 'globalExceptionHandler' for bean class [soccer.backend.global.exception.GlobalExceptionHandler] conflicts with existing, non-compatible bean definition of same name and class [soccer.backend.restdocs.utils.config.TestExceptionHandler]
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.checkCandidate(ClassPathBeanDefinitionScanner.java:349)
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:287)
	at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:128)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:289)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:243)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:196)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:164)
	... 90 common frames omitted

 2023-06-30T19:04:53.729+09:00 ERROR 5904 --- [main] o.s.test.context.TestContextManager      : Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [soccer.backend.restdocs.controller.CommonDocControllerTest@118102ee]

java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@2b329bbd testClass = soccer.backend.restdocs.controller.CommonDocControllerTest, locations = [], classes = [soccer.backend.BackendApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceLocations = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@9da1, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@235ecd9f, [ImportsContextCustomizer@34819867 key = [soccer.backend.restdocs.utils.RestDocsConfig, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@221a3fa4, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@8462f31, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7ae0a9ec, org.springframework.boot.test.context.SpringBootTestAnnotation@b7038b85], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:142)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [soccer.backend.BackendApplication]
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:178)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:398)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:283)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:344)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:115)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:747)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:565)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:310)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1388)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:184)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:118)
	... 72 common frames omitted
Caused by: org.springframework.context.annotation.ConflictingBeanDefinitionException: Annotation-specified bean name 'globalExceptionHandler' for bean class [soccer.backend.global.exception.GlobalExceptionHandler] conflicts with existing, non-compatible bean definition of same name and class [soccer.backend.restdocs.utils.config.TestExceptionHandler]
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.checkCandidate(ClassPathBeanDefinitionScanner.java:349)
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:287)
	at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:128)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:289)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:243)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:196)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:164)
	... 90 common frames omitted

 2023-06-30T19:05:58.260+09:00  INFO 15876 --- [main] s.b.domain.CommonDocControllerTest       : Starting CommonDocControllerTest using Java 17.0.6 with PID 15876 (started by kimhobeen in C:\Users\kimhobeen\IdeaProjects\toy_project\soccerAnalyst\socceranalyst\backend)
 2023-06-30T19:05:58.262+09:00  INFO 15876 --- [main] s.b.domain.CommonDocControllerTest       : No active profile set, falling back to 1 default profile: "default"
 2023-06-30T19:05:58.544+09:00  WARN 15876 --- [main] o.s.w.c.s.GenericWebApplicationContext   : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [soccer.backend.BackendApplication]
 2023-06-30T19:05:58.746+09:00 ERROR 15876 --- [main] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [soccer.backend.BackendApplication]
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:178)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:398)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:283)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:344)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:115)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:747)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:565)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:310)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1388)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:184)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:118)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: org.springframework.context.annotation.ConflictingBeanDefinitionException: Annotation-specified bean name 'globalExceptionHandler' for bean class [soccer.backend.global.exception.GlobalExceptionHandler] conflicts with existing, non-compatible bean definition of same name and class [soccer.backend.restdocs.utils.config.TestExceptionHandler]
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.checkCandidate(ClassPathBeanDefinitionScanner.java:349)
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:287)
	at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:128)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:289)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:243)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:196)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:164)
	... 90 common frames omitted

 2023-06-30T19:05:58.757+09:00 ERROR 15876 --- [main] o.s.test.context.TestContextManager      : Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [soccer.backend.restdocs.controller.CommonDocControllerTest@70331432]

java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@6a282fdd testClass = soccer.backend.restdocs.controller.CommonDocControllerTest, locations = [], classes = [soccer.backend.BackendApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceLocations = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@9da1, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2a265ea9, [ImportsContextCustomizer@743c6ce4 key = [soccer.backend.restdocs.utils.RestDocsConfig, soccer.backend.restdocs.utils.config.TestExceptionHandler, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5e2c3d18, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@6caf0677, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6440112d, org.springframework.boot.test.context.SpringBootTestAnnotation@d4097cbc], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:142)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [soccer.backend.BackendApplication]
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:178)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:398)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:283)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:344)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:115)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:747)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:565)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:310)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1388)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:184)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:118)
	... 72 common frames omitted
Caused by: org.springframework.context.annotation.ConflictingBeanDefinitionException: Annotation-specified bean name 'globalExceptionHandler' for bean class [soccer.backend.global.exception.GlobalExceptionHandler] conflicts with existing, non-compatible bean definition of same name and class [soccer.backend.restdocs.utils.config.TestExceptionHandler]
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.checkCandidate(ClassPathBeanDefinitionScanner.java:349)
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:287)
	at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:128)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:289)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:243)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:196)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:164)
	... 90 common frames omitted

 2023-06-30T19:07:14.355+09:00  INFO 20332 --- [main] s.b.domain.CommonDocControllerTest       : Starting CommonDocControllerTest using Java 17.0.6 with PID 20332 (started by kimhobeen in C:\Users\kimhobeen\IdeaProjects\toy_project\soccerAnalyst\socceranalyst\backend)
 2023-06-30T19:07:14.358+09:00  INFO 20332 --- [main] s.b.domain.CommonDocControllerTest       : No active profile set, falling back to 1 default profile: "default"
 2023-06-30T19:07:15.535+09:00  INFO 20332 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
 2023-06-30T19:07:15.538+09:00  INFO 20332 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
 2023-06-30T19:07:15.757+09:00  INFO 20332 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 207 ms. Found 8 JPA repository interfaces.
 2023-06-30T19:07:15.776+09:00  INFO 20332 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
 2023-06-30T19:07:15.781+09:00  INFO 20332 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
 2023-06-30T19:07:15.801+09:00  INFO 20332 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.auth.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T19:07:15.802+09:00  INFO 20332 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.dotrecord.repository.DotRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T19:07:15.804+09:00  INFO 20332 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.game.repository.GamePlayerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T19:07:15.804+09:00  INFO 20332 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.game.repository.GameRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T19:07:15.805+09:00  INFO 20332 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.player.repository.PlayerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T19:07:15.806+09:00  INFO 20332 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.post.repository.CommentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T19:07:15.807+09:00  INFO 20332 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.post.repository.PostRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T19:07:15.807+09:00  INFO 20332 --- [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface soccer.backend.domain.record.repository.RecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
 2023-06-30T19:07:15.807+09:00  INFO 20332 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
 2023-06-30T19:07:16.749+09:00  INFO 20332 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
 2023-06-30T19:07:16.831+09:00  INFO 20332 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.1.7.Final
 2023-06-30T19:07:17.258+09:00  INFO 20332 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
 2023-06-30T19:07:17.432+09:00  INFO 20332 --- [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
 2023-06-30T19:07:17.434+09:00  INFO 20332 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
 2023-06-30T19:07:17.471+09:00  INFO 20332 --- [main] SQL dialect                              : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
 2023-06-30T19:07:18.590+09:00 DEBUG 20332 --- [main] org.hibernate.SQL                        : drop table if exists comment cascade 
 2023-06-30T19:07:18.591+09:00 DEBUG 20332 --- [main] org.hibernate.SQL                        : drop table if exists dot_record cascade 
 2023-06-30T19:07:18.592+09:00 DEBUG 20332 --- [main] org.hibernate.SQL                        : drop table if exists game cascade 
 2023-06-30T19:07:18.592+09:00 DEBUG 20332 --- [main] org.hibernate.SQL                        : drop table if exists game_player cascade 
 2023-06-30T19:07:18.592+09:00 DEBUG 20332 --- [main] org.hibernate.SQL                        : drop table if exists member cascade 
 2023-06-30T19:07:18.592+09:00 DEBUG 20332 --- [main] org.hibernate.SQL                        : drop table if exists player cascade 
 2023-06-30T19:07:18.593+09:00 DEBUG 20332 --- [main] org.hibernate.SQL                        : drop table if exists post cascade 
 2023-06-30T19:07:18.593+09:00 DEBUG 20332 --- [main] org.hibernate.SQL                        : drop table if exists record cascade 
 2023-06-30T19:07:18.593+09:00 DEBUG 20332 --- [main] org.hibernate.SQL                        : drop sequence if exists comment_seq
 2023-06-30T19:07:18.593+09:00 DEBUG 20332 --- [main] org.hibernate.SQL                        : drop sequence if exists post_seq
 2023-06-30T19:07:18.599+09:00 DEBUG 20332 --- [main] org.hibernate.SQL                        : create sequence comment_seq start with 1 increment by 50
 2023-06-30T19:07:18.601+09:00 DEBUG 20332 --- [main] org.hibernate.SQL                        : create sequence post_seq start with 1 increment by 50
 2023-06-30T19:07:18.602+09:00 DEBUG 20332 --- [main] org.hibernate.SQL                        : create table comment (id bigint not null, created_date timestamp(6), modified_date timestamp(6), content varchar(255), member_id bigint, post_id bigint, primary key (id))
 2023-06-30T19:07:18.607+09:00 DEBUG 20332 --- [main] org.hibernate.SQL                        : create table dot_record (id bigint generated by default as identity, game_position smallint, game_time integer, player_id bigint, player_name varchar(255), shoot boolean not null, shootx float(24), shooty float(24), valid_shoot boolean not null, x float(24), y float(24), game_id bigint, primary key (id))
 2023-06-30T19:07:18.611+09:00 DEBUG 20332 --- [main] org.hibernate.SQL                        : create table game (id bigint generated by default as identity, ga integer, gf integer, created_at date, game_name varchar(255), location varchar(255), opponent varchar(255), member_id bigint, primary key (id))
 2023-06-30T19:07:18.612+09:00 DEBUG 20332 --- [main] org.hibernate.SQL                        : create table game_player (id bigint generated by default as identity, game_id bigint, player_id bigint, primary key (id))
 2023-06-30T19:07:18.613+09:00 DEBUG 20332 --- [main] org.hibernate.SQL                        : create table member (id bigint generated by default as identity, authority varchar(255), created_at timestamp(6), email varchar(255) not null, member_id varchar(255) not null, name varchar(255) not null, nickname varchar(255) not null, password varchar(255) not null, primary key (id))
 2023-06-30T19:07:18.615+09:00 DEBUG 20332 --- [main] org.hibernate.SQL                        : create table player (id bigint generated by default as identity, name varchar(255), position varchar(255), member_id bigint, primary key (id))
 2023-06-30T19:07:18.616+09:00 DEBUG 20332 --- [main] org.hibernate.SQL                        : create table post (post_id bigint not null, created_date timestamp(6), modified_date timestamp(6), content varchar(255), title varchar(255), member_id bigint, primary key (post_id))
 2023-06-30T19:07:18.617+09:00 DEBUG 20332 --- [main] org.hibernate.SQL                        : create table record (id bigint generated by default as identity, assist integer, chance_making integer, contention integer, cross_pass integer, dribble integer, game_position varchar(255), goal integer, intercept integer, long_pass integer, main varchar(255), pass integer, shoot integer, success_contention integer, success_cross_pass integer, success_dribble integer, success_long_pass integer, success_pass integer, tackle integer, time_in integer, time_out integer, touch integer, turnover integer, valid_shoot integer, game_id bigint, player_id bigint, primary key (id))
 2023-06-30T19:07:18.618+09:00 DEBUG 20332 --- [main] org.hibernate.SQL                        : alter table if exists comment add constraint FKmrrrpi513ssu63i2783jyiv9m foreign key (member_id) references member
 2023-06-30T19:07:18.624+09:00 DEBUG 20332 --- [main] org.hibernate.SQL                        : alter table if exists comment add constraint FKs1slvnkuemjsq2kj4h3vhx7i1 foreign key (post_id) references post
 2023-06-30T19:07:18.625+09:00 DEBUG 20332 --- [main] org.hibernate.SQL                        : alter table if exists dot_record add constraint FK7vn3bjp9sr541b5t6554xw0va foreign key (game_id) references game
 2023-06-30T19:07:18.626+09:00 DEBUG 20332 --- [main] org.hibernate.SQL                        : alter table if exists game add constraint FKlhk3xa6l9tc50g6mxkykgg5sx foreign key (member_id) references member
 2023-06-30T19:07:18.627+09:00 DEBUG 20332 --- [main] org.hibernate.SQL                        : alter table if exists game_player add constraint FK8so14tnd5mqdjqabugc0cycxu foreign key (game_id) references game
 2023-06-30T19:07:18.628+09:00 DEBUG 20332 --- [main] org.hibernate.SQL                        : alter table if exists game_player add constraint FK7ntwi66eylpagi55pmm4i61l5 foreign key (player_id) references player
 2023-06-30T19:07:18.630+09:00 DEBUG 20332 --- [main] org.hibernate.SQL                        : alter table if exists player add constraint FKtky0mr5eq3kww4rqiscxivebo foreign key (member_id) references member
 2023-06-30T19:07:18.632+09:00 DEBUG 20332 --- [main] org.hibernate.SQL                        : alter table if exists post add constraint FK83s99f4kx8oiqm3ro0sasmpww foreign key (member_id) references member
 2023-06-30T19:07:18.634+09:00 DEBUG 20332 --- [main] org.hibernate.SQL                        : alter table if exists record add constraint FK5ic2ohoewcxeuaysnre2s7l4t foreign key (game_id) references game
 2023-06-30T19:07:18.634+09:00 DEBUG 20332 --- [main] org.hibernate.SQL                        : alter table if exists record add constraint FKfw266w08u31ocmlunkj50celm foreign key (player_id) references player
 2023-06-30T19:07:18.640+09:00  INFO 20332 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
 2023-06-30T19:07:18.650+09:00  INFO 20332 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
 2023-06-30T19:07:19.730+09:00  WARN 20332 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.auth.repository.MemberRepository
 2023-06-30T19:07:21.103+09:00  WARN 20332 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.player.repository.PlayerRepository
 2023-06-30T19:07:21.192+09:00  WARN 20332 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.game.repository.GameRepository
 2023-06-30T19:07:21.265+09:00  WARN 20332 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.record.repository.RecordRepository
 2023-06-30T19:07:21.337+09:00  WARN 20332 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.game.repository.GamePlayerRepository
 2023-06-30T19:07:21.389+09:00  WARN 20332 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.dotrecord.repository.DotRecordRepository
 2023-06-30T19:07:21.567+09:00  WARN 20332 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.post.repository.PostRepository
 2023-06-30T19:07:22.272+09:00  WARN 20332 --- [main] ocalVariableTableParameterNameDiscoverer : Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: soccer.backend.domain.post.repository.CommentRepository
 2023-06-30T19:07:22.413+09:00  WARN 20332 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
 2023-06-30T19:07:23.369+09:00  INFO 20332 --- [main] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page: class path resource [static/index.html]
 2023-06-30T19:07:24.207+09:00  INFO 20332 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/dev/actuator'
 2023-06-30T19:07:24.380+09:00  INFO 20332 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@20395afe, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2dfdea3a, org.springframework.security.web.context.SecurityContextHolderFilter@32e0b990, org.springframework.security.web.header.HeaderWriterFilter@2693b289, org.springframework.web.filter.CorsFilter@4b1339bf, org.springframework.security.web.authentication.logout.LogoutFilter@7740028a, soccer.backend.auth.jwt.JwtFilter@46f43f50, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@232e4e1d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4df5b562, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2cf073da, org.springframework.security.web.session.SessionManagementFilter@3d2e1d18, org.springframework.security.web.access.ExceptionTranslationFilter@5a32ab89, org.springframework.security.web.access.intercept.AuthorizationFilter@d200d3e]
 2023-06-30T19:07:25.529+09:00  INFO 20332 --- [main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
 2023-06-30T19:07:25.529+09:00  INFO 20332 --- [main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
 2023-06-30T19:07:25.531+09:00  INFO 20332 --- [main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
 2023-06-30T19:07:25.697+09:00  INFO 20332 --- [main] s.b.domain.CommonDocControllerTest       : Started CommonDocControllerTest in 11.871 seconds (process running for 13.146)
 2023-06-30T19:07:26.084+09:00  INFO 20332 --- [main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
 2023-06-30T19:07:26.085+09:00  INFO 20332 --- [main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
 2023-06-30T19:07:26.087+09:00  INFO 20332 --- [main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
 2023-06-30T19:07:26.345+09:00  INFO 20332 --- [main] s.backend.global.logging.LogAspect       : handleMethodArgumentNotValidException 실행
 2023-06-30T19:07:26.347+09:00  INFO 20332 --- [main] s.backend.global.logging.LogAspect       : Unknown Error detail: 

org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public void soccer.backend.restdocs.utils.CommonDocController.errorSample(soccer.backend.restdocs.utils.CommonDocController$SampleRequest) throws java.lang.Exception: [Field error in object 'sampleRequest' on field 'email': rejected value [hhh.naver]; codes [Email.sampleRequest.email,Email.email,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [sampleRequest.email,email]; arguments []; default message [email],[Ljakarta.validation.constraints.Pattern$Flag;@40957c86,.*]; default message [must be a well-formed email address]]
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:144)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:181)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:148)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:563)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:631)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)
	at soccer.backend.restdocs.controller.CommonDocControllerTest.errorSample(CommonDocControllerTest.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:217)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)

 2023-06-30T19:07:26.358+09:00  INFO 20332 --- [main] s.backend.global.logging.LogAspect       : Unknown called the method: handleMethodArgumentNotValidException
 2023-06-30T19:07:26.363+09:00  INFO 20332 --- [main] s.backend.global.logging.LogAspect       : Unknown method has finished: handleMethodArgumentNotValidException
 2023-06-30T19:07:26.620+09:00  INFO 20332 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
 2023-06-30T19:07:26.621+09:00  INFO 20332 --- [SpringApplicationShutdownHook] .SchemaDropperImpl$DelayedDropActionImpl : HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
 2023-06-30T19:07:26.622+09:00 DEBUG 20332 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists comment cascade 
 2023-06-30T19:07:26.627+09:00 DEBUG 20332 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists dot_record cascade 
 2023-06-30T19:07:26.630+09:00 DEBUG 20332 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists game cascade 
 2023-06-30T19:07:26.633+09:00 DEBUG 20332 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists game_player cascade 
 2023-06-30T19:07:26.635+09:00 DEBUG 20332 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists member cascade 
 2023-06-30T19:07:26.638+09:00 DEBUG 20332 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists player cascade 
 2023-06-30T19:07:26.640+09:00 DEBUG 20332 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists post cascade 
 2023-06-30T19:07:26.642+09:00 DEBUG 20332 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop table if exists record cascade 
 2023-06-30T19:07:26.643+09:00 DEBUG 20332 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop sequence if exists comment_seq
 2023-06-30T19:07:26.644+09:00 DEBUG 20332 --- [SpringApplicationShutdownHook] org.hibernate.SQL                        : drop sequence if exists post_seq
 2023-06-30T19:07:26.647+09:00  INFO 20332 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
 2023-06-30T19:07:26.651+09:00  INFO 20332 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
